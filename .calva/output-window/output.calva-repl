; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval16387 (form-init14337938583148698856.clj:1293).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/give-cards
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand #{}},
  :player-2 {:name "Armin", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval16391 (form-init14337938583148698856.clj:1292).
; Wrong number of args (0) passed to: kata-0100-basics-in-15-min.core/shuffle-deck
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand #{}},
  :player-2 {:name "Armin", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn (:player-2 :player-1),
  :player-1 {:name "Benno", :points 0, :at-hand (:07♠ :14-A♠ :12-D♦️ :09♦️ :11-B♣ :11-B♥️ :08♠ :09♣)},
  :player-2 {:name "Armin", :points 0, :at-hand ([] :10♠ :13-K♣ :08♣ :14-A♥️ :09♥️ :14-A♦️ :11-B♠ :12-D♠)}},
 :deck (:07♣ :13-K♠ :10♥️ :12-D♥️ :13-K♦️ :14-A♣ :08♥️ :07♦️ :08♦️ :13-K♥️ :09♠ :10♣ :07♥️ :11-B♦️ :12-D♣ :10♦️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand #{}},
  :player-2 {:name "Armin", :points 0, :at-hand #{}}},
 :deck
 [:14-A♣
  :10♣
  :07♣
  :11-B♥️
  :10♦️
  :08♦️
  :07♠
  :09♣
  :13-K♥️
  :14-A♠
  :09♥️
  :08♠
  :12-D♠
  :07♥️
  :10♠
  :14-A♦️
  :11-B♠
  :11-B♣
  :08♣
  :08♥️
  :12-D♣
  :12-D♥️
  :12-D♦️
  :13-K♠
  :14-A♥️
  :13-K♦️
  :09♠
  :10♥️
  :11-B♦️
  :09♦️
  :13-K♣
  :07♦️],
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand (:09♦️ :10♠ :14-A♥️ :13-K♣ :07♥️ :12-D♠ :11-B♠ :13-K♠)},
  :player-2 {:name "Armin", :points 0, :at-hand (:08♠ :11-B♥️ :11-B♣ :08♦️ :10♣ :09♣ :14-A♠ :09♥️)}},
 :deck (:07♣ :12-D♦️ :10♦️ :07♦️ :12-D♣ :08♥️ :07♠ :10♥️ :14-A♣ :12-D♥️ :13-K♦️ :11-B♦️ :08♣ :13-K♥️ :09♠ :14-A♦️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand (:09♥️ :11-B♦️ :09♣ :08♥️ :14-A♥️ :10♥️ :13-K♥️ :13-K♠)},
  :player-2 {:name "Armin", :points 0, :at-hand (:13-K♣ :12-D♥️ :07♠ :14-A♣ :11-B♠ :08♠ :08♣ :13-K♦️)}},
 :deck (:11-B♥️ :09♦️ :08♦️ :09♠ :11-B♣ :12-D♠ :14-A♦️ :10♣ :07♣ :12-D♦️ :10♠ :07♥️ :14-A♠ :10♦️ :07♦️ :12-D♣),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn (:player-2 :player-1),
  :player-1 {:name "Benno", :points 0, :at-hand (:12-D♠ :07♠ :09♦️ :11-B♠ :07♦️ :14-A♦️ :11-B♦️ :10♥️)},
  :player-2 {:name "Armin", :points 0, :at-hand ([] :14-A♥️ :12-D♣ :08♥️ :13-K♣ :11-B♣ :08♦️ :13-K♦️ :13-K♥️)}},
 :deck (:08♠ :07♣ :10♠ :12-D♦️ :07♥️ :08♣ :14-A♣ :10♣ :14-A♠ :09♥️ :11-B♥️ :09♣ :12-D♥️ :13-K♠ :09♠ :10♦️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/next-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at cider.nrepl.middleware.debug/apply-instrumented-maybe (debug.clj:525).
; Wrong number of args (2) passed to: kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/find-pairs-with-diff (form-init14337938583148698856.clj:1222).
; Wrong number of args (0) passed to: clojure.lang.PersistentHashSet
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1225:20).
; Unable to resolve symbol: hand in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (IllegalArgumentException) at java.lang.Object/toString (Object.java:246).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Error printing return value (IllegalArgumentException) at clojure.lang.RT/seqFrom (RT.java:557).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
::11-B
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (IllegalArgumentException) at java.lang.Object/toString (Object.java:246).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:07 :11-B :09 :11-B♥)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:07 :11-B :09 :11-B♥)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:07 :09 :11-B♥ :11-B)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:07 :09 :11-B :11-B)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:07 :09 :11-B♥ :11-B)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:11-B♥ :11-B :07 :09)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:11-B♥ :11-B :07 :09)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♥
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/card-value-keyword
clj꞉kata-0100-basics-in-15-min.core꞉> 
("♦️" "♥️" "♠" "♣")
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♥️
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥)
clj꞉kata-0100-basics-in-15-min.core꞉> 
":12-D♥️"
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥ \️)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♣)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥ \️)
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♥️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♥️
clj꞉kata-0100-basics-in-15-min.core꞉> 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluation was interrupted
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (InterruptedException) at java.util.concurrent.locks.AbstractQueuedSynchronizer/doAcquireSharedInterruptibly (AbstractQueuedSynchronizer.java:1040).
; null
clj꞉kata-0100-basics-in-15-min.core꞉> 
QUIT
clj꞉kata-0100-basics-in-15-min.core꞉> 
clj꞉kata-0100-basics-in-15-min.core꞉> 
clj꞉kata-0100-basics-in-15-min.core꞉> 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Jack-in done.
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1160:10).
; Unable to resolve symbol: card-value-keyword in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1152:3).
; No such namespace: str
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1152:3).
; No such namespace: str
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 116.797625 msecs"
"Elapsed time: 0.139375 msecs"
"Elapsed time: 0.152875 msecs"
"Elapsed time: 2.636541 msecs"
"Elapsed time: 260.614292 msecs"
"Elapsed time: 1025.095042 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1258:15).
; Unable to resolve symbol: find-pairs-with-diff in this context
; Evaluation of file core.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyze (Compiler.java:6812)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3824)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$LetExpr$Parser/parse (Compiler.java:6388)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
kata-0100-basics-in-15-min.core/eval8856 (form-init8500820721721687694.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 119.455709 msecs"
"Elapsed time: 0.153666 msecs"
"Elapsed time: 0.145459 msecs"
"Elapsed time: 2.732709 msecs"
"Elapsed time: 261.311917 msecs"
"Elapsed time: 1034.226125 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
; Syntax error (IllegalStateException) compiling at (src/kata_0100_basics_in_15_min/core.clj:1308:1).
; Attempting to call unbound fn: #'kata-0100-basics-in-15-min.core/start-turn
; Evaluation of file core.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/load (Compiler.java:7652)
kata-0100-basics-in-15-min.core/eval9898 (form-init8500820721721687694.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 127.411708 msecs"
"Elapsed time: 0.155875 msecs"
"Elapsed time: 0.176834 msecs"
"Elapsed time: 2.805166 msecs"
"Elapsed time: 322.5125 msecs"
"Elapsed time: 1036.099667 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
abc
424829641831125
23.06.2022
424829657498916
23.06.2022
111111111
30.05.2012
true
true
"Elapsed time: 0.00875 msecs"
"Elapsed time: 0.030833 msecs"
"Elapsed time: 5.0E-4 msecs"
[3 5 7]
(5 7)
(7)
()
20
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
finally...
:a :b :c :d
:a :d :x :y :z
A B X Y
A D nil
A :-/ B
all values:  (0 1 2 3 4 5 6 7 8 9)
a =  3
b =  4
c =  5
all values:  (0 1 2)
a =  nil
b =  nil
c =  nil
all values:  (0 1 2 3 4)
a =  3
b =  4
c =  nil
all values:  (15 16 17 18 19 20 21 22 23 24 25 26 27 28 29)
a =  18
b =  19
c =  20
false
42
:cheeseburger
finished both  [26524 1882]
final value should be: 25000, is:  26524
finished both  [25000 -570]
final value should be: 25000, is:  25000
344
500
"Elapsed time: 111.570084 msecs"
"Elapsed time: 49.514042 msecs"
"Elapsed time: 94.50725 msecs"
"Elapsed time: 927.522 msecs"
"Elapsed time: 659.889792 msecs"
"Elapsed time: 486.298042 msecs"
"Elapsed time: 512.902416 msecs"
-------------------------
clojure.core/derive
([tag parent] [h tag parent])
  Establishes a parent/child relationship between parent and
  tag. Parent must be a namespace-qualified symbol or keyword and
  child can be either a namespace-qualified symbol or keyword or a
  class. h must be a hierarchy obtained from make-hierarchy, if not
  supplied defaults to, and modifies, the global hierarchy.
; Warning: protocol #'kata-0100-basics-in-15-min.core/Append is overwriting function append
-------------------------
kata-0100-basics-in-15-min.core/Append
  This protocol lets us add things to the end of a collection.
-------------------------
kata-0100-basics-in-15-min.core/append
([coll x])
  Appends x to the end of collection coll.
Adding 2 and 2 together...
Adding 2 and 2 together...
nil
Adding 2 and 2 together...
4
Adding 2 and 2 together...
4-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
-------- dbg -------->>
(/ 1 (+ 2 1))  =>  1/3
<<------ dbg --------

-------- dbg -------->>
(take 10 (map (partial + 20) (range 100)))  =>  (20 21 22 23 24 25 26 27 28 29)
<<------ dbg --------

frist
second
15
[36 25 16 9 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥ \️)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \❤ \️)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♦)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥)
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:11-B :11-B :07 :09)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07 :11-B] [4 :07 :11-B] [2 :07 :09] [2 :09 :11-B] [2 :09 :11-B]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{[2 :09 :11-B] [4 :07 :11-B] [2 :07 :09]}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/all-pairs
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07 :14-A]
 [6 :07 :13-K]
 [6 :08 :14-A]
 [5 :08 :13-K]
 [5 :07 :12-D]
 [5 :09 :14-A]
 [4 :07 :11-B]
 [4 :08 :12-D]
 [4 :09 :13-K]
 [4 :10 :14-A]
 [3 :08 :11-B]
 [3 :11-B :14-A]
 [3 :09 :12-D]
 [3 :10 :13-K]
 [3 :07 :10]
 [2 :12-D :14-A]
 [2 :11-B :13-K]
 [2 :09 :11-B]
 [2 :07 :09]
 [2 :08 :10]
 [2 :10 :12-D]
 [1 :07 :08]
 [1 :12-D :13-K]
 [1 :10 :11-B]
 [1 :11-B :12-D]
 [1 :13-K :14-A]
 [1 :09 :10]
 [1 :08 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{[2 :09 :11-B] [4 :07 :11-B] [2 :07 :09]}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07 :11-B] [2 :09 :11-B] [2 :07 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval12948 (form-init8500820721721687694.clj:1313).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/give-cards
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/shuffle-deck]
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand #{}},
  :player-2 {:name "Armin", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/shuffle-deck]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval12952 (form-init8500820721721687694.clj:1313).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/give-cards
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn (:player-2 :player-1),
  :player-1 {:name "Benno", :points 0, :at-hand (:12-D♠ :11-B♣ :08♦️ :07♠ :07♣ :09♠ :10♦️ :07♦️)},
  :player-2 {:name "Armin", :points 0, :at-hand ([] :07♥️ :14-A♥️ :10♠ :11-B♠ :08♥️ :12-D♦️ :09♦️ :12-D♥️)}},
 :deck (:14-A♠ :08♠ :09♣ :08♣ :10♣ :13-K♠ :12-D♣ :10♥️ :11-B♦️ :13-K♦️ :13-K♣ :14-A♦️ :11-B♥️ :14-A♣ :13-K♥️ :09♥️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand (:11-B♣ :12-D♣ :08♦️ :07♠ :11-B♠ :14-A♠ :07♣ :13-K♣)},
  :player-2 {:name "Armin", :points 0, :at-hand (:10♥️ :08♥️ :07♥️ :08♣ :09♥️ :14-A♥️ :08♠ :11-B♥️)}},
 :deck (:14-A♦️ :11-B♦️ :13-K♥️ :09♣ :12-D♠ :13-K♦️ :13-K♠ :12-D♦️ :09♦️ :07♦️ :10♣ :09♠ :12-D♥️ :14-A♣ :10♠ :10♦️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/a-game
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07 :11-B] [2 :09 :11-B] [2 :07 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07 :11-B] [2 :09 :11-B] [2 :07 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07♣ :14-A♠]
 [7 :07♣ :14-A♥️]
 [7 :07♣ :14-A♦️]
 [7 :07♦️ :14-A♠]
 [7 :07♠ :14-A♣]
 [7 :07♠ :14-A♠]
 [7 :07♥️ :14-A♣]
 [7 :07♣ :14-A♣]
 [7 :07♦️ :14-A♥️]
 [7 :07♥️ :14-A♦️]
 [7 :07♦️ :14-A♦️]
 [7 :07♥️ :14-A♠]
 [7 :07♠ :14-A♦️]
 [7 :07♥️ :14-A♥️]
 [7 :07♠ :14-A♥️]
 [7 :07♦️ :14-A♣]
 [6 :08♣ :14-A♦️]
 [6 :07♦️ :13-K♦️]
 [6 :07♠ :13-K♣]
 [6 :07♥️ :13-K♥️]
 [6 :08♦️ :14-A♥️]
 [6 :08♦️ :14-A♣]
 [6 :07♣ :13-K♦️]
 [6 :07♣ :13-K♣]
 [6 :07♥️ :13-K♦️]
 [6 :08♠ :14-A♦️]
 [6 :08♥️ :14-A♦️]
 [6 :07♥️ :13-K♠]
 [6 :08♠ :14-A♥️]
 [6 :07♠ :13-K♦️]
 [6 :08♣ :14-A♣]
 [6 :08♥️ :14-A♠]
 [6 :07♣ :13-K♥️]
 [6 :07♥️ :13-K♣]
 [6 :07♦️ :13-K♥️]
 [6 :07♦️ :13-K♠]
 [6 :07♦️ :13-K♣]
 [6 :08♣ :14-A♠]
 [6 :08♥️ :14-A♥️]
 [6 :08♣ :14-A♥️]
 [6 :08♥️ :14-A♣]
 [6 :08♠ :14-A♠]
 [6 :08♠ :14-A♣]
 [6 :08♦️ :14-A♠]
 [6 :07♠ :13-K♥️]
 [6 :07♣ :13-K♠]
 [6 :08♦️ :14-A♦️]
 [6 :07♠ :13-K♠]
 [5 :08♥️ :13-K♠]
 [5 :09♦️ :14-A♦️]
 ...]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07 :14-A]
 [6 :07 :13-K]
 [6 :08 :14-A]
 [5 :08 :13-K]
 [5 :07 :12-D]
 [5 :09 :14-A]
 [4 :07 :11-B]
 [4 :08 :12-D]
 [4 :09 :13-K]
 [4 :10 :14-A]
 [3 :08 :11-B]
 [3 :11-B :14-A]
 [3 :09 :12-D]
 [3 :10 :13-K]
 [3 :07 :10]
 [2 :12-D :14-A]
 [2 :11-B :13-K]
 [2 :09 :11-B]
 [2 :07 :09]
 [2 :08 :10]
 [2 :10 :12-D]
 [1 :07 :08]
 [1 :12-D :13-K]
 [1 :10 :11-B]
 [1 :11-B :12-D]
 [1 :13-K :14-A]
 [1 :09 :10]
 [1 :08 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07♣ :14-A♠]
 [7 :07♣ :14-A♥️]
 [7 :07♣ :14-A♦️]
 [7 :07♦️ :14-A♠]
 [7 :07♠ :14-A♣]
 [7 :07♠ :14-A♠]
 [7 :07♥️ :14-A♣]
 [7 :07♣ :14-A♣]
 [7 :07♦️ :14-A♥️]
 [7 :07♥️ :14-A♦️]
 [7 :07♦️ :14-A♦️]
 [7 :07♥️ :14-A♠]
 [7 :07♠ :14-A♦️]
 [7 :07♥️ :14-A♥️]
 [7 :07♠ :14-A♥️]
 [7 :07♦️ :14-A♣]
 [6 :08♣ :14-A♦️]
 [6 :07♦️ :13-K♦️]
 [6 :07♠ :13-K♣]
 [6 :07♥️ :13-K♥️]
 [6 :08♦️ :14-A♥️]
 [6 :08♦️ :14-A♣]
 [6 :07♣ :13-K♦️]
 [6 :07♣ :13-K♣]
 [6 :07♥️ :13-K♦️]
 [6 :08♠ :14-A♦️]
 [6 :08♥️ :14-A♦️]
 [6 :07♥️ :13-K♠]
 [6 :08♠ :14-A♥️]
 [6 :07♠ :13-K♦️]
 [6 :08♣ :14-A♣]
 [6 :08♥️ :14-A♠]
 [6 :07♣ :13-K♥️]
 [6 :07♥️ :13-K♣]
 [6 :07♦️ :13-K♥️]
 [6 :07♦️ :13-K♠]
 [6 :07♦️ :13-K♣]
 [6 :08♣ :14-A♠]
 [6 :08♥️ :14-A♥️]
 [6 :08♣ :14-A♥️]
 [6 :08♥️ :14-A♣]
 [6 :08♠ :14-A♠]
 [6 :08♠ :14-A♣]
 [6 :08♦️ :14-A♠]
 [6 :07♠ :13-K♥️]
 [6 :07♣ :13-K♠]
 [6 :08♦️ :14-A♦️]
 [6 :07♠ :13-K♠]
 [5 :08♥️ :13-K♠]
 [5 :09♦️ :14-A♦️]
 ...]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07 :14-A]
 [6 :07 :13-K]
 [6 :08 :14-A]
 [5 :08 :13-K]
 [5 :07 :12-D]
 [5 :09 :14-A]
 [4 :07 :11-B]
 [4 :08 :12-D]
 [4 :09 :13-K]
 [4 :10 :14-A]
 [3 :08 :11-B]
 [3 :11-B :14-A]
 [3 :09 :12-D]
 [3 :10 :13-K]
 [3 :07 :10]
 [2 :12-D :14-A]
 [2 :11-B :13-K]
 [2 :09 :11-B]
 [2 :07 :09]
 [2 :08 :10]
 [2 :10 :12-D]
 [1 :07 :08]
 [1 :12-D :13-K]
 [1 :10 :11-B]
 [1 :11-B :12-D]
 [1 :13-K :14-A]
 [1 :09 :10]
 [1 :08 :09]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07♣ :14-A♠]
 [7 :07♣ :14-A♥️]
 [7 :07♣ :14-A♦️]
 [7 :07♦️ :14-A♠]
 [7 :07♠ :14-A♣]
 [7 :07♠ :14-A♠]
 [7 :07♥️ :14-A♣]
 [7 :07♣ :14-A♣]
 [7 :07♦️ :14-A♥️]
 [7 :07♥️ :14-A♦️]
 [7 :07♦️ :14-A♦️]
 [7 :07♥️ :14-A♠]
 [7 :07♠ :14-A♦️]
 [7 :07♥️ :14-A♥️]
 [7 :07♠ :14-A♥️]
 [7 :07♦️ :14-A♣]
 [6 :08♣ :14-A♦️]
 [6 :07♦️ :13-K♦️]
 [6 :07♠ :13-K♣]
 [6 :07♥️ :13-K♥️]
 [6 :08♦️ :14-A♥️]
 [6 :08♦️ :14-A♣]
 [6 :07♣ :13-K♦️]
 [6 :07♣ :13-K♣]
 [6 :07♥️ :13-K♦️]
 [6 :08♠ :14-A♦️]
 [6 :08♥️ :14-A♦️]
 [6 :07♥️ :13-K♠]
 [6 :08♠ :14-A♥️]
 [6 :07♠ :13-K♦️]
 [6 :08♣ :14-A♣]
 [6 :08♥️ :14-A♠]
 [6 :07♣ :13-K♥️]
 [6 :07♥️ :13-K♣]
 [6 :07♦️ :13-K♥️]
 [6 :07♦️ :13-K♠]
 [6 :07♦️ :13-K♣]
 [6 :08♣ :14-A♠]
 [6 :08♥️ :14-A♥️]
 [6 :08♣ :14-A♥️]
 [6 :08♥️ :14-A♣]
 [6 :08♠ :14-A♠]
 [6 :08♠ :14-A♣]
 [6 :08♦️ :14-A♠]
 [6 :07♠ :13-K♥️]
 [6 :07♣ :13-K♠]
 [6 :08♦️ :14-A♦️]
 [6 :07♠ :13-K♠]
 [5 :08♥️ :13-K♠]
 [5 :09♦️ :14-A♦️]
 ...]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07♠ :11-B♠] [4 :07♠ :11-B♥] [2 :09♠ :11-B♥] [2 :09♠ :11-B♠] [2 :07♠ :09♠]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/all-pairs
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[7 :07♣ :14-A♠]
 [7 :07♣ :14-A♥️]
 [7 :07♣ :14-A♦️]
 [7 :07♦️ :14-A♠]
 [7 :07♠ :14-A♣]
 [7 :07♠ :14-A♠]
 [7 :07♥️ :14-A♣]
 [7 :07♣ :14-A♣]
 [7 :07♦️ :14-A♥️]
 [7 :07♥️ :14-A♦️]
 [7 :07♦️ :14-A♦️]
 [7 :07♥️ :14-A♠]
 [7 :07♠ :14-A♦️]
 [7 :07♥️ :14-A♥️]
 [7 :07♠ :14-A♥️]
 [7 :07♦️ :14-A♣]
 [6 :08♣ :14-A♦️]
 [6 :07♦️ :13-K♦️]
 [6 :07♠ :13-K♣]
 [6 :07♥️ :13-K♥️]
 [6 :08♦️ :14-A♥️]
 [6 :08♦️ :14-A♣]
 [6 :07♣ :13-K♦️]
 [6 :07♣ :13-K♣]
 [6 :07♥️ :13-K♦️]
 [6 :08♠ :14-A♦️]
 [6 :08♥️ :14-A♦️]
 [6 :07♥️ :13-K♠]
 [6 :08♠ :14-A♥️]
 [6 :07♠ :13-K♦️]
 [6 :08♣ :14-A♣]
 [6 :08♥️ :14-A♠]
 [6 :07♣ :13-K♥️]
 [6 :07♥️ :13-K♣]
 [6 :07♦️ :13-K♥️]
 [6 :07♦️ :13-K♠]
 [6 :07♦️ :13-K♣]
 [6 :08♣ :14-A♠]
 [6 :08♥️ :14-A♥️]
 [6 :08♣ :14-A♥️]
 [6 :08♥️ :14-A♣]
 [6 :08♠ :14-A♠]
 [6 :08♠ :14-A♣]
 [6 :08♦️ :14-A♠]
 [6 :07♠ :13-K♥️]
 [6 :07♣ :13-K♠]
 [6 :08♦️ :14-A♦️]
 [6 :07♠ :13-K♠]
 [5 :08♥️ :13-K♠]
 [5 :09♦️ :14-A♦️]
 ...]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [2 :09 :11-B♥]
 [2 :07♠ :09]
 [2 :09 :11-B♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09 :09]
 [0 :11-B♠ :11-B♠]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[4 :07♠ :11-B] [2 :09♠ :11-B] [2 :07♠ :09♠] [0 :07♠ :07♠] [0 :09♠ :09♠] [0 :11-B :11-B]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Can't take value of a macro: #'clojure.core/comment
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (IllegalArgumentException) at kata-0100-basics-in-15-min.core/find-pairs-with-diff (form-init8500820721721687694.clj:1250).
; Don't know how to create ISeq from: java.lang.Long
clj꞉kata-0100-basics-in-15-min.core꞉> 
([0 :11-B♥ :11-B♠] [0 :11-B♠ :11-B♥] [0 :07♠ :07♠] [0 :11-B♥ :11-B♥] [0 :09♠ :09♠] [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([0 :11-B♥ :11-B♠] [0 :11-B♠ :11-B♥] [0 :07♠ :07♠] [0 :11-B♥ :11-B♥] [0 :09♠ :09♠] [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/get-card-with-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♠
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
:09♠
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥] [2 :09♠ :11-B♠] [2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥] [2 :09♠ :11-B♠] [2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Benno", :points 0, :at-hand (:11-B♣ :12-D♣ :08♦️ :07♠ :11-B♠ :14-A♠ :07♣ :13-K♣)},
  :player-2 {:name "Armin", :points 0, :at-hand (:10♥️ :08♥️ :07♥️ :08♣ :09♥️ :14-A♥️ :08♠ :11-B♥️)}},
 :deck (:14-A♦️ :11-B♦️ :13-K♥️ :09♣ :12-D♠ :13-K♦️ :13-K♠ :12-D♦️ :09♦️ :07♦️ :10♣ :09♠ :12-D♥️ :14-A♣ :10♠ :10♦️),
 :all-cards
 (:07♦️
  :08♦️
  :09♦️
  :10♦️
  :11-B♦️
  :12-D♦️
  :13-K♦️
  :14-A♦️
  :07♥️
  :08♥️
  :09♥️
  :10♥️
  :11-B♥️
  :12-D♥️
  :13-K♥️
  :14-A♥️
  :07♠
  :08♠
  :09♠
  :10♠
  :11-B♠
  :12-D♠
  :13-K♠
  :14-A♠
  :07♣
  :08♣
  :09♣
  :10♣
  :11-B♣
  :12-D♣
  :13-K♣
  :14-A♣)}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠]
 [7 :07♠ :14-A♠]
 [6 :07♠ :13-K♣]
 [6 :07♣ :13-K♣]
 [6 :08♦️ :14-A♠]
 [5 :07♠ :12-D♣]
 [5 :07♣ :12-D♣]
 [5 :08♦️ :13-K♣]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♣]
 [4 :07♣ :11-B♣]
 [4 :07♣ :11-B♠]
 [4 :08♦️ :12-D♣])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠]
 [7 :07♠ :14-A♠]
 [6 :07♠ :13-K♣]
 [6 :07♣ :13-K♣]
 [6 :08♦️ :14-A♠]
 [5 :07♠ :12-D♣]
 [5 :07♣ :12-D♣]
 [5 :08♦️ :13-K♣]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♣]
 [4 :07♣ :11-B♣]
 [4 :07♣ :11-B♠]
 [4 :08♦️ :12-D♣])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/a-game
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1300:10).
; Unable to resolve symbol: try-find-pair in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠]
 [7 :07♠ :14-A♠]
 [2 :12-D♣ :14-A♠]
 [2 :11-B♠ :13-K♣]
 [2 :11-B♣ :13-K♣]
 [1 :07♣ :08♦️]
 [1 :07♠ :08♦️]
 [1 :11-B♠ :12-D♣]
 [1 :11-B♣ :12-D♣]
 [1 :13-K♣ :14-A♠]
 [1 :12-D♣ :13-K♣])
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:12-D♣ :14-A♠ nil :07♠)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 168.544209 msecs"
"Elapsed time: 0.304916 msecs"
"Elapsed time: 0.197916 msecs"
"Elapsed time: 3.533333 msecs"
"Elapsed time: 957.703083 msecs"
"Elapsed time: 1016.869875 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
; Syntax error compiling if at (src/kata_0100_basics_in_15_min/core.clj:1330:3).
; Too few arguments to if
; Evaluation of file core.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyzeSeq (Compiler.java:7119)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
kata-0100-basics-in-15-min.core/eval13217 (form-init8500820721721687694.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
(
; Execution error (IllegalArgumentException) at kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1326).
; No matching clause: :random
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣] :08♦️)
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
(
; Execution error (IllegalArgumentException) at kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1327).
; No matching clause: :pairs
clj꞉kata-0100-basics-in-15-min.core꞉> 
(pst)
nil
; IllegalArgumentException No matching clause: :pairs
; 	kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1327)
; 	kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1324)
; 	kata-0100-basics-in-15-min.core/start-turn/fn--14309 (form-init8500820721721687694.clj:1338)
; 	clojure.core/map/fn--5884 (core.clj:2757)
; 	clojure.lang.LazySeq.sval (LazySeq.java:42)
; 	clojure.lang.LazySeq.seq (LazySeq.java:51)
; 	clojure.lang.RT.seq (RT.java:535)
; 	clojure.core/seq--5419 (core.clj:139)
; 	clojure.core/print-sequential (core_print.clj:53)
; 	clojure.core/fn--7329 (core_print.clj:174)
; 	clojure.core/fn--7329 (core_print.clj:174)
; 	clojure.lang.MultiFn.invoke (MultiFn.java:234)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
(
; Execution error (ExceptionInfo) at kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1331).
; Error in strategy: [:pairs [3]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(pst)
nil
; ExceptionInfo Error in strategy: [:pairs [3]] {:strategy-type :pairs}
; 	kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1331)
; 	kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1324)
; 	kata-0100-basics-in-15-min.core/start-turn/fn--14309 (form-init8500820721721687694.clj:1338)
; 	clojure.core/map/fn--5884 (core.clj:2757)
; 	clojure.lang.LazySeq.sval (LazySeq.java:42)
; 	clojure.lang.LazySeq.seq (LazySeq.java:51)
; 	clojure.lang.RT.seq (RT.java:535)
; 	clojure.core/seq--5419 (core.clj:139)
; 	clojure.core/print-sequential (core_print.clj:53)
; 	clojure.core/fn--7329 (core_print.clj:174)
; 	clojure.core/fn--7329 (core_print.clj:174)
; 	clojure.lang.MultiFn.invoke (MultiFn.java:234)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
(
; Execution error (ExceptionInfo) at kata-0100-basics-in-15-min.core/try-act-strategy (form-init8500820721721687694.clj:1331).
; Error in strategy: [:pairs [3]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/act-strategy
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣] :08♦️)
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/b-game
clj꞉kata-0100-basics-in-15-min.core꞉> 
(nil nil nil nil nil :08♦️)
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:08♦️)
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣] :08♦️)
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1360:3).
; Unable to resolve symbol: apply-strategy-entry in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ExceptionInfo) at kata-0100-basics-in-15-min.core/apply-strategy-entry (form-init8500820721721687694.clj:1357).
; Error in strategy: []
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ExceptionInfo) at kata-0100-basics-in-15-min.core/apply-strategy-entry (form-init8500820721721687694.clj:1357).
; Error in strategy: [:07]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1360:3).
; Unable to resolve symbol: single in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
:07♠
clj꞉kata-0100-basics-in-15-min.core꞉> 
:07♠
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/ase
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/h
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[4 :07♠ :11-B♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/find-pairs-with-diff]
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([6 :07♠ :13-K♠]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
:07♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
[4 :07♠ :11-B♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-value
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:07♠
clj꞉kata-0100-basics-in-15-min.core꞉> 
:12-D♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/ase
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/h
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B♣
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣] :08♦️)
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:08♦️)
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6 :07♠ :13-K♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6 :07♠ :13-K♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6 :07♠ :13-K♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :07♠ :09♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :11-B♥ :13-K♠♠]
 [2 :11-B♠ :13-K♠♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
([2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6 :07♠ :13-K♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠] [4 :07♠ :11-B♥] [4 :09♠ :13-K♠] [6 :07♠ :13-K♠] [2 :11-B♠ :13-K♠] [2 :11-B♥ :13-K♠] [2 :09♠ :11-B♥] [2 :09♠ :11-B♠] [2 :07♠ :09♠] [0 :11-B♥ :11-B♠] [0 :11-B♠ :11-B♥] [0 :07♠ :07♠] [0 :11-B♥ :11-B♥] [0 :09♠ :09♠] [0 :13-K♠ :13-K♠] [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
QUIT
clj꞉kata-0100-basics-in-15-min.core꞉> 
QUIT
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/ase
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/h
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/try-find-pair
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠])
[2 :12-D♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
([4 :07♠ :11-B♠]
 [4 :07♠ :11-B♥]
 [4 :09♠ :13-K♠]
 [6 :07♠ :13-K♠]
 [2 :11-B♠ :13-K♠]
 [2 :11-B♥ :13-K♠]
 [2 :09♠ :11-B♥]
 [2 :09♠ :11-B♠]
 [2 :07♠ :09♠]
 [0 :11-B♥ :11-B♠]
 [0 :11-B♠ :11-B♥]
 [0 :07♠ :07♠]
 [0 :11-B♥ :11-B♥]
 [0 :09♠ :09♠]
 [0 :13-K♠ :13-K♠]
 [0 :11-B♠ :11-B♠])
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/find-pairs-with-diff (form-init8500820721721687694.clj:1249).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[2 :12-D♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[3 :08♦️ :11-B♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([0 :07♠ :07♠] [0 :12-D♣ :12-D♣] [0 :07♣ :07♠] [0 :11-B♠ :11-B♣] [0 :13-K♣ :13-K♣] [0 :11-B♣ :11-B♠] [0 :07♣ :07♣] [0 :07♠ :07♣] [0 :11-B♣ :11-B♣] [0 :08♦️ :08♦️] [0 :14-A♠ :14-A♠] [0 :11-B♠ :11-B♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
[0 :07♠ :07♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣])
[3 :08♦️ :11-B♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([3 :08♦️ :11-B♣] [4 :07♠ :11-B♣] [4 :08♦️ :12-D♣] [5 :07♠ :12-D♣])
[3 :08♦️ :11-B♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([5 :07♠ :12-D♣] [3 :08♦️ :11-B♣] [4 :07♠ :11-B♣] [4 :08♦️ :12-D♣])
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([5 :07♠ :12-D♣] [3 :08♦️ :11-B♣] [4 :07♠ :11-B♣] [4 :08♦️ :12-D♣])
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣] [1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠])
[2 :12-D♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([5 :07♠ :12-D♣] [3 :08♦️ :11-B♣] [4 :07♠ :11-B♣] [4 :08♦️ :12-D♣])
[5 :07♠ :12-D♣]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♠ :08♦️] [1 :11-B♣ :12-D♣] [5 :07♠ :12-D♣] [3 :08♦️ :11-B♣] [4 :07♠ :11-B♣] [4 :08♦️ :12-D♣])
[1 :07♠ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/try-find-pair (form-init8500820721721687694.clj:1331).
; Assert failed: (= coll-of-diffs (distinct coll-of-diffs))
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
try-find-pair, all: ([1 :07♣ :08♦️] [1 :07♠ :08♦️] [1 :11-B♠ :12-D♣] [1 :11-B♣ :12-D♣] [1 :13-K♣ :14-A♠] [1 :12-D♣ :13-K♣] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣] [7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠] [2 :12-D♣ :14-A♠] [2 :11-B♠ :13-K♣] [2 :11-B♣ :13-K♣])
[1 :07♣ :08♦️]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/start-turn
clj꞉kata-0100-basics-in-15-min.core꞉> 
(try-find-pair, all: ([7 :07♣ :14-A♠] [7 :07♠ :14-A♠] [6 :07♠ :13-K♣] [6 :07♣ :13-K♣] [6 :08♦️ :14-A♠] [5 :07♠ :12-D♣] [5 :07♣ :12-D♣] [5 :08♦️ :13-K♣])
try-find-pair, all: ([4 :07♠ :11-B♠] [4 :07♠ :11-B♣] [4 :07♣ :11-B♣] [4 :07♣ :11-B♠] [4 :08♦️ :12-D♣])
try-find-pair, all: ([3 :08♦️ :11-B♣] [3 :11-B♠ :14-A♠] [3 :08♦️ :11-B♠] [3 :11-B♣ :14-A♠])
[7 :07♣ :14-A♠] :14-A♠ [4 :07♠ :11-B♠] :11-B♣ [3 :08♦️ :11-B♣] :08♦️)
[7 :07♣ :14-A♠]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(try-find-pair, all: ()
try-find-pair, all: ()
try-find-pair, all: ()
:08♦️)
:08♦️
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
(\: \1 \2 \- \D \♥)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-numbers
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-colors
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1153:3).
; Unable to resolve symbol: add-bdka in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/add-bdka
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Can't take value of a macro: #'clojure.core/comment
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Can't take value of a macro: #'clojure.core/comment
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/n-create-card]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/n-create-card]
clj꞉kata-0100-basics-in-15-min.core꞉> 
"♥"
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Unable to resolve symbol: ♥ in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/n-create-card]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" nil]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
["♥" 13]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/add-bdka
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" "K"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" "K"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 "♥" "7"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" "K"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-card
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" "♥K"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 "♥" "♥7"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-create-complete-card-set
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 "♦️" "♦️7"]
 [8 "♦️" "♦️8"]
 [9 "♦️" "♦️9"]
 [10 "♦️" "♦️10"]
 [11 "♦️" "♦️B"]
 [12 "♦️" "♦️D"]
 [13 "♦️" "♦️K"]
 [14 "♦️" "♦️A"]
 [7 "♥" "♥7"]
 [8 "♥" "♥8"]
 [9 "♥" "♥9"]
 [10 "♥" "♥10"]
 [11 "♥" "♥B"]
 [12 "♥" "♥D"]
 [13 "♥" "♥K"]
 [14 "♥" "♥A"]
 [7 "♠" "♠7"]
 [8 "♠" "♠8"]
 [9 "♠" "♠9"]
 [10 "♠" "♠10"]
 [11 "♠" "♠B"]
 [12 "♠" "♠D"]
 [13 "♠" "♠K"]
 [14 "♠" "♠A"]
 [7 "♣" "♣7"]
 [8 "♣" "♣8"]
 [9 "♣" "♣9"]
 [10 "♣" "♣10"]
 [11 "♣" "♣B"]
 [12 "♣" "♣D"]
 [13 "♣" "♣K"]
 [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.core꞉> 
:11-B
clj꞉kata-0100-basics-in-15-min.core꞉> 
[13 "♥" "♥K"]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/first--5401]
clj꞉kata-0100-basics-in-15-min.core꞉> 
([7 "♦️" "♦️7"]
 [8 "♦️" "♦️8"]
 [9 "♦️" "♦️9"]
 [10 "♦️" "♦️10"]
 [11 "♦️" "♦️B"]
 [12 "♦️" "♦️D"]
 [13 "♦️" "♦️K"]
 [14 "♦️" "♦️A"]
 [7 "♥" "♥7"]
 [8 "♥" "♥8"]
 [9 "♥" "♥9"]
 [10 "♥" "♥10"]
 [11 "♥" "♥B"]
 [12 "♥" "♥D"]
 [13 "♥" "♥K"]
 [14 "♥" "♥A"]
 [7 "♠" "♠7"]
 [8 "♠" "♠8"]
 [9 "♠" "♠9"]
 [10 "♠" "♠10"]
 [11 "♠" "♠B"]
 [12 "♠" "♠D"]
 [13 "♠" "♠K"]
 [14 "♠" "♠A"]
 [7 "♣" "♣7"]
 [8 "♣" "♣8"]
 [9 "♣" "♣9"]
 [10 "♣" "♣10"]
 [11 "♣" "♣B"]
 [12 "♣" "♣D"]
 [13 "♣" "♣K"]
 [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/kata_0100_basics_in_15_min/core.clj:1231:1).
; ♦️ - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
♦️ - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error macroexpanding clojure.core/defn at (src/kata_0100_basics_in_15_min/core.clj:1231:1).
; ♦️ - failed: vector? at: [:fn-tail :arity-1 :params] spec: :clojure.core.specs.alpha/param-list
♦️ - failed: (or (nil? %) (sequential? %)) at: [:fn-tail :arity-n :bodies] spec: :clojure.core.specs.alpha/params+body
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1249:30).
; Unable to resolve symbol: c-val in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/c-val
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n-all-pairs
clj꞉kata-0100-basics-in-15-min.core꞉> 
[[2 [7 "♦️" "♦️7"] [9 "♦️" "♦️9"]]
 [1 [7 "♦️" "♦️7"] [8 "♦️" "♦️8"]]
 [1 [8 "♦️" "♦️8"] [9 "♦️" "♦️9"]]
 [0 [8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
 [0 [7 "♦️" "♦️7"] [7 "♦️" "♦️7"]]
 [0 [9 "♦️" "♦️9"] [9 "♦️" "♦️9"]]]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1280:15).
; Unable to resolve symbol: c-create-complete-card-set in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/c-create-game
clj꞉kata-0100-basics-in-15-min.core꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: cards.clj
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:363:5).
; Unable to resolve symbol: possible-moves in this context
; Evaluation of file cards.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyze (Compiler.java:6812)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6122)
clojure.lang.Compiler$LetExpr$Parser/parse (Compiler.java:6440)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
kata-0100-basics-in-15-min.cards/eval15066 (form-init8500820721721687694.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: cards.clj
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:385:28).
; Unable to resolve symbol: players in this context
; Evaluation of file cards.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/analyze (Compiler.java:6812)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$LetExpr$Parser/parse (Compiler.java:6388)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7099)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/access$300 (Compiler.java:38)
clojure.lang.Compiler$DefExpr$Parser/parse (Compiler.java:596)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7111)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7185)
clojure.lang.Compiler/load (Compiler.java:7640)
kata-0100-basics-in-15-min.cards/eval15233 (form-init8500820721721687694.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: cards.clj
{:players {:next-turn [:player-1 :player-2], :player-1 {:name "Benno", :points 0, :at-hand (:14-A♥ :12-D♦️ :13-K♣ :10♠ :10♥ :08♥ :11-B♥ :12-D♠)}, :player-2 {:name "Armin", :points 0, :at-hand (:07♣ :08♣ :10♦️ :12-D♥ :08♠ :09♠ :13-K♦️ :13-K♥)}}, :deck (:11-B♦️ :09♣ :08♦️ :13-K♠ :11-B♠ :14-A♦️ :10♣ :11-B♣ :14-A♠ :09♥ :12-D♣ :14-A♣ :07♥ :09♦️ :07♠ :07♦️), :all-cards (:07♦️ :08♦️ :09♦️ :10♦️ :11-B♦️ :12-D♦️ :13-K♦️ :14-A♦️ :07♥ :08♥ :09♥ :10♥ :11-B♥ :12-D♥ :13-K♥ :14-A♥ :07♠ :08♠ :09♠ :10♠ :11-B♠ :12-D♠ :13-K♠ :14-A♠ :07♣ :08♣ :09♣ :10♣ :11-B♣ :12-D♣ :13-K♣ :14-A♣)}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n_shuffle-deck
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-shuffle-deck
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:85:26).
; Unable to resolve symbol: n-create-game in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-shuffle-deck
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck
 [[13 "♠" "♠K"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [9 "♦️" "♦️9"]
  [14 "♦️" "♦️A"]
  [8 "♠" "♠8"]
  [7 "♠" "♠7"]
  [14 "♣" "♣A"]
  [10 "♦️" "♦️10"]
  [10 "♠" "♠10"]
  [11 "♣" "♣B"]
  [9 "♠" "♠9"]
  [9 "♥" "♥9"]
  [14 "♥" "♥A"]
  [13 "♣" "♣K"]
  [9 "♣" "♣9"]
  [7 "♦️" "♦️7"]
  [10 "♥" "♥10"]
  [7 "♣" "♣7"]
  [11 "♦️" "♦️B"]
  [8 "♦️" "♦️8"]
  [14 "♠" "♠A"]
  [13 "♦️" "♦️K"]
  [8 "♥" "♥8"]
  [10 "♣" "♣10"]
  [7 "♥" "♥7"]
  [8 "♣" "♣8"]
  [11 "♠" "♠B"]
  [13 "♥" "♥K"]
  [12 "♦️" "♦️D"]
  [12 "♠" "♠D"]
  [12 "♣" "♣D"]],
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: cards.clj
{:players {:next-turn [:player-1 :player-2], :player-1 {:name "Benno", :points 0, :at-hand (:07♦️ :12-D♦️ :09♥ :09♦️ :09♠ :14-A♠ :07♠ :08♠)}, :player-2 {:name "Armin", :points 0, :at-hand (:10♦️ :11-B♦️ :08♦️ :13-K♣ :12-D♣ :13-K♠ :12-D♠ :14-A♣)}}, :deck (:10♣ :11-B♥ :08♣ :13-K♦️ :11-B♠ :07♥ :11-B♣ :12-D♥ :09♣ :07♣ :08♥ :14-A♥ :14-A♦️ :10♠ :10♥ :13-K♥), :all-cards (:07♦️ :08♦️ :09♦️ :10♦️ :11-B♦️ :12-D♦️ :13-K♦️ :14-A♦️ :07♥ :08♥ :09♥ :10♥ :11-B♥ :12-D♥ :13-K♥ :14-A♥ :07♠ :08♠ :09♠ :10♠ :11-B♠ :12-D♠ :13-K♠ :14-A♠ :07♣ :08♣ :09♣ :10♣ :11-B♣ :12-D♣ :13-K♣ :14-A♣)}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[13 "♥" "♥K"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-card-mapping
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Error printing return value (ArityException) at clojure.lang.AFn/throwArity (AFn.java:429).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-card-mapping
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Error printing return value (ArityException) at clojure.lang.AFn/throwArity (AFn.java:429).
; Wrong number of args (0) passed to: clojure.lang.PersistentVector
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-card-mapping
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([:♦️7 [7 "♦️" "♦️7"]]
 [:♦️8 [8 "♦️" "♦️8"]]
 [:♦️9 [9 "♦️" "♦️9"]]
 [:♦️10 [10 "♦️" "♦️10"]]
 [:♦️B [11 "♦️" "♦️B"]]
 [:♦️D [12 "♦️" "♦️D"]]
 [:♦️K [13 "♦️" "♦️K"]]
 [:♦️A [14 "♦️" "♦️A"]]
 [:♥7 [7 "♥" "♥7"]]
 [:♥8 [8 "♥" "♥8"]]
 [:♥9 [9 "♥" "♥9"]]
 [:♥10 [10 "♥" "♥10"]]
 [:♥B [11 "♥" "♥B"]]
 [:♥D [12 "♥" "♥D"]]
 [:♥K [13 "♥" "♥K"]]
 [:♥A [14 "♥" "♥A"]]
 [:♠7 [7 "♠" "♠7"]]
 [:♠8 [8 "♠" "♠8"]]
 [:♠9 [9 "♠" "♠9"]]
 [:♠10 [10 "♠" "♠10"]]
 [:♠B [11 "♠" "♠B"]]
 [:♠D [12 "♠" "♠D"]]
 [:♠K [13 "♠" "♠K"]]
 [:♠A [14 "♠" "♠A"]]
 [:♣7 [7 "♣" "♣7"]]
 [:♣8 [8 "♣" "♣8"]]
 [:♣9 [9 "♣" "♣9"]]
 [:♣10 [10 "♣" "♣10"]]
 [:♣B [11 "♣" "♣B"]]
 [:♣D [12 "♣" "♣D"]]
 [:♣K [13 "♣" "♣K"]]
 [:♣A [14 "♣" "♣A"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-card-mapping
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:♠8 [8 "♠" "♠8"],
 :♥7 [7 "♥" "♥7"],
 :♥9 [9 "♥" "♥9"],
 :♣B [11 "♣" "♣B"],
 :♥8 [8 "♥" "♥8"],
 :♥10 [10 "♥" "♥10"],
 :♠10 [10 "♠" "♠10"],
 :♣8 [8 "♣" "♣8"],
 :♦️A [14 "♦️" "♦️A"],
 :♠A [14 "♠" "♠A"],
 :♣A [14 "♣" "♣A"],
 :♦️8 [8 "♦️" "♦️8"],
 :♣K [13 "♣" "♣K"],
 :♦️9 [9 "♦️" "♦️9"],
 :♥D [12 "♥" "♥D"],
 :♦️K [13 "♦️" "♦️K"],
 :♠B [11 "♠" "♠B"],
 :♣7 [7 "♣" "♣7"],
 :♠9 [9 "♠" "♠9"],
 :♣D [12 "♣" "♣D"],
 :♦️D [12 "♦️" "♦️D"],
 :♣10 [10 "♣" "♣10"],
 :♦️7 [7 "♦️" "♦️7"],
 :♥A [14 "♥" "♥A"],
 :♠7 [7 "♠" "♠7"],
 :♠D [12 "♠" "♠D"],
 :♥B [11 "♥" "♥B"],
 :♥K [13 "♥" "♥K"],
 :♠K [13 "♠" "♠K"],
 :♣9 [9 "♣" "♣9"],
 :♦️10 [10 "♦️" "♦️10"],
 :♦️B [11 "♦️" "♦️B"]}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/card-map
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:54:10).
; Unable to resolve symbol: c in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (StackOverflowError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:53).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:1:8034).
; Can't take value of a macro: #'clojure.core/comment
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Error printing return value (NullPointerException) at kata-0100-basics-in-15-min.cards/c$fn (form-init8500820721721687694.clj:53).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/c$fn (form-init8500820721721687694.clj:53).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/all-keys
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠8
 :♥7
 :♥9
 :♣B
 :♥8
 :♥10
 :♠10
 :♣8
 :♦️A
 :♠A
 :♣A
 :♦️8
 :♣K
 :♦️9
 :♥D
 :♦️K
 :♠B
 :♣7
 :♠9
 :♣D
 :♦️D
 :♣10
 :♦️7
 :♥A
 :♠7
 :♠D
 :♥B
 :♥K
 :♠K
 :♣9
 :♦️10
 :♦️B)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/all-keys
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠10
 :♠7
 :♠8
 :♠9
 :♠A
 :♠B
 :♠D
 :♠K
 :♣10
 :♣7
 :♣8
 :♣9
 :♣A
 :♣B
 :♣D
 :♣K
 :♥10
 :♥7
 :♥8
 :♥9
 :♥A
 :♥B
 :♥D
 :♥K
 :♦️10
 :♦️7
 :♦️8
 :♦️9
 :♦️A
 :♦️B
 :♦️D
 :♦️K)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/all-keys
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/all-keys
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♦️K
 :♦️D
 :♦️B
 :♦️A
 :♦️9
 :♦️8
 :♦️7
 :♦️10
 :♥K
 :♥D
 :♥B
 :♥A
 :♥9
 :♥8
 :♥7
 :♥10
 :♣K
 :♣D
 :♣B
 :♣A
 :♣9
 :♣8
 :♣7
 :♣10
 :♠K
 :♠D
 :♠B
 :♠A
 :♠9
 :♠8
 :♠7
 :♠10)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/all-keys
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠10
 :♠7
 :♠8
 :♠9
 :♠A
 :♠B
 :♠D
 :♠K
 :♣10
 :♣7
 :♣8
 :♣9
 :♣A
 :♣B
 :♣D
 :♣K
 :♥10
 :♥7
 :♥8
 :♥9
 :♥A
 :♥B
 :♥D
 :♥K
 :♦️10
 :♦️7
 :♦️8
 :♦️9
 :♦️A
 :♦️B
 :♦️D
 :♦️K)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1
  {:name "Benno",
   :points 0,
   :at-hand
   ([9 "♠" "♠9"] [10 "♥" "♥10"] [12 "♥" "♥D"] [7 "♠" "♠7"] [13 "♣" "♣K"] [13 "♠" "♠K"] [11 "♠" "♠B"] [7 "♦️" "♦️7"])},
  :player-2
  {:name "Armin",
   :points 0,
   :at-hand
   ([14 "♣" "♣A"]
    [12 "♣" "♣D"]
    [11 "♦️" "♦️B"]
    [7 "♥" "♥7"]
    [9 "♥" "♥9"]
    [10 "♣" "♣10"]
    [10 "♠" "♠10"]
    [8 "♥" "♥8"])}},
 :deck
 ([8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [12 "♠" "♠D"]
  [11 "♣" "♣B"]
  [13 "♦️" "♦️K"]
  [8 "♣" "♣8"]
  [10 "♦️" "♦️10"]
  [14 "♥" "♥A"]
  [7 "♣" "♣7"]
  [13 "♥" "♥K"]
  [9 "♣" "♣9"]
  [8 "♠" "♠8"]
  [14 "♦️" "♦️A"]
  [14 "♠" "♠A"]
  [12 "♦️" "♦️D"]
  [11 "♥" "♥B"]),
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/a-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[2 [7 "♦️" "♦️7"] [9 "♦️" "♦️9"]]
 [1 [7 "♦️" "♦️7"] [8 "♦️" "♦️8"]]
 [1 [8 "♦️" "♦️8"] [9 "♦️" "♦️9"]]
 [0 [8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
 [0 [7 "♦️" "♦️7"] [7 "♦️" "♦️7"]]
 [0 [9 "♦️" "♦️9"] [9 "♦️" "♦️9"]]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NumberFormatException) at java.lang.NumberFormatException/forInputString (NumberFormatException.java:65).
; For input string: "7 "
clj꞉kata-0100-basics-in-15-min.cards꞉> 
java.lang.NumberFormatException/forInputString (NumberFormatException.java:65)
java.lang.Integer/parseInt (Integer.java:652)
kata-0100-basics-in-15-min.cards/value-of-card (cards.clj:80)
kata-0100-basics-in-15-min.cards/value-of-card (cards.clj:75)
kata-0100-basics-in-15-min.cards/all-pairs (cards.clj:110)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
kata-0100-basics-in-15-min.cards/all-pairs (cards.clj:108)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/reduce1 (core.clj:932)
clojure.core/set (core.clj:4101)
clojure.core/set (core.clj:4093)
kata-0100-basics-in-15-min.cards/all-pairs (cards.clj:108)
kata-0100-basics-in-15-min.cards/all-pairs (cards.clj:90)
kata-0100-basics-in-15-min.cards/find-pairs-with-diff (cards.clj:122)
kata-0100-basics-in-15-min.cards/find-pairs-with-diff (cards.clj:116)
kata-0100-basics-in-15-min.cards/eval15802 (form-init8500820721721687694.clj:224)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: cards.clj
#'kata-0100-basics-in-15-min.cards/winner
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:189).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
clojure.lang.Numbers/ops (Numbers.java:1068)
clojure.lang.Numbers/minus (Numbers.java:162)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:189)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/concat (core.clj:727)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.Cons/next (Cons.java:39)
clojure.lang.RT/next (RT.java:713)
clojure.core/next (core.clj:64)
clojure.core/reduce1 (core.clj:946)
clojure.core/set (core.clj:4101)
clojure.core/set (core.clj:4093)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:185)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:169)
kata-0100-basics-in-15-min.cards/find-pairs-with-diff (cards.clj:216)
kata-0100-basics-in-15-min.cards/find-pairs-with-diff (cards.clj:210)
kata-0100-basics-in-15-min.cards/eval15923 (form-init8500820721721687694.clj:225)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:189).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:189).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:189).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:210).
; Assert failed: (= coll-of-diffs (seq (distinct coll-of-diffs)))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:189).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
clojure.lang.Numbers/ops (Numbers.java:1068)
clojure.lang.Numbers/minus (Numbers.java:162)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:189)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/concat (core.clj:727)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.Cons/next (Cons.java:39)
clojure.lang.RT/next (RT.java:713)
clojure.core/next (core.clj:64)
clojure.core/reduce1 (core.clj:946)
clojure.core/set (core.clj:4101)
clojure.core/set (core.clj:4093)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:185)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:169)
kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:216)
kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:210)
kata-0100-basics-in-15-min.cards/eval15946 (form-init8500820721721687694.clj:229)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-all-pairs
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/eval15958$n-all-pairs$iter$fn$iter$fn (form-init8500820721721687694.clj:190).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] nil nil nil)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] nil nil nil)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] nil nil nil)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:♠8 [8 "♠" "♠8"],
 :♥7 [7 "♥" "♥7"],
 :♥9 [9 "♥" "♥9"],
 :♣B [11 "♣" "♣B"],
 :♥8 [8 "♥" "♥8"],
 :♥10 [10 "♥" "♥10"],
 :♠10 [10 "♠" "♠10"],
 :♣8 [8 "♣" "♣8"],
 :♦️A [14 "♦️" "♦️A"],
 :♠A [14 "♠" "♠A"],
 :♣A [14 "♣" "♣A"],
 :♦️8 [8 "♦️" "♦️8"],
 :♣K [13 "♣" "♣K"],
 :♦️9 [9 "♦️" "♦️9"],
 :♥D [12 "♥" "♥D"],
 :♦️K [13 "♦️" "♦️K"],
 :♠B [11 "♠" "♠B"],
 :♣7 [7 "♣" "♣7"],
 :♠9 [9 "♠" "♠9"],
 :♣D [12 "♣" "♣D"],
 :♦️D [12 "♦️" "♦️D"],
 :♣10 [10 "♣" "♣10"],
 :♦️7 [7 "♦️" "♦️7"],
 :♥A [14 "♥" "♥A"],
 :♠7 [7 "♠" "♠7"],
 :♠D [12 "♠" "♠D"],
 :♥B [11 "♥" "♥B"],
 :♥K [13 "♥" "♥K"],
 :♠K [13 "♠" "♠K"],
 :♣9 [9 "♣" "♣9"],
 :♦️10 [10 "♦️" "♦️10"],
 :♦️B [11 "♦️" "♦️B"]}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] [11 "♠" "♠B"] [11 "♠" "♠B"] [13 "♠" "♠K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:55:15).
; Unable to resolve symbol: % in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (filter nil? %))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (filter nil? %))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (filter nil? %))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (filter nil? %))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] [11 "♠" "♠B"] [11 "♠" "♠B"] [13 "♠" "♠K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (count (filter nil? %)))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-all-pairs
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[2 [7 "♦️" "♦️7"] [9 "♦️" "♦️9"]]
 [1 [7 "♦️" "♦️7"] [8 "♦️" "♦️8"]]
 [1 [8 "♦️" "♦️8"] [9 "♦️" "♦️9"]]
 [0 [8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
 [0 [7 "♦️" "♦️7"] [7 "♦️" "♦️7"]]
 [0 [9 "♦️" "♦️9"] [9 "♦️" "♦️9"]]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:210).
; Assert failed: (= coll-of-diffs (seq (distinct coll-of-diffs)))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([4 [7 "♠" "♠7"] [11 "♥" "♥B"]]
 [4 [7 "♠" "♠7"] [11 "♠" "♠B"]]
 [5 [9 "♠" "♠9"] [14 "♠" "♠A"]]
 [7 [7 "♠" "♠7"] [14 "♠" "♠A"]]
 [3 [11 "♠" "♠B"] [14 "♠" "♠A"]]
 [3 [11 "♥" "♥B"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [9 "♠" "♠9"] [11 "♠" "♠B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [0 [11 "♥" "♥B"] [11 "♠" "♠B"]]
 [0 [11 "♠" "♠B"] [11 "♥" "♥B"]]
 [0 [11 "♠" "♠B"] [11 "♠" "♠B"]]
 [0 [7 "♠" "♠7"] [7 "♠" "♠7"]]
 [0 [14 "♠" "♠A"] [14 "♠" "♠A"]]
 [0 [11 "♥" "♥B"] [11 "♥" "♥B"]]
 [0 [9 "♠" "♠9"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:214).
; Assert failed: (or (nil? coll-of-diffs) (= coll-of-diffs (seq (distinct coll-of-diffs))))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:214).
; Assert failed: (or (nil? coll-of-diffs) (= coll-of-diffs (seq (distinct coll-of-diffs))))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [12 "♠" "♠D"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [4 [7 "♠" "♠7"] [11 "♥" "♥B"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-get-card-with-value
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♥" "♥B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♥" "♥B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♠" "♠B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (IllegalArgumentException) at kata-0100-basics-in-15-min.cards/get-card-with-value (cards.clj:236).
; contains? not supported on type: clojure.lang.Cons
clj꞉kata-0100-basics-in-15-min.cards꞉> 
clojure.lang.RT/contains (RT.java:853)
clojure.core/contains? (core.clj:1494)
clojure.set/intersection (set.clj:41)
clojure.core.protocols/iter-reduce (protocols.clj:49)
clojure.core.protocols/fn (protocols.clj:75)
clojure.core.protocols/fn (protocols.clj:13)
clojure.core/reduce (core.clj:6830)
clojure.set/intersection (set.clj:38)
clojure.set/intersection (set.clj:33)
kata-0100-basics-in-15-min.cards/get-card-with-value (cards.clj:236)
kata-0100-basics-in-15-min.cards/get-card-with-value (cards.clj:232)
kata-0100-basics-in-15-min.cards/try-find-value (cards.clj:282)
clojure.core/map (core.clj:2757)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/filter (core.clj:2813)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.LazySeq/first (LazySeq.java:73)
clojure.lang.RT/first (RT.java:692)
clojure.core/first (core.clj:55)
kata-0100-basics-in-15-min.cards/try-find-value (cards.clj:281)
kata-0100-basics-in-15-min.cards/try-find-value (cards.clj:278)
kata-0100-basics-in-15-min.cards/eval16219 (form-init8500820721721687694.clj:256)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-try-find-value
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[13 "♣" "♣K"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-try-find-pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]])
[3 [11 "♣" "♣B"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]])
[3 [11 "♣" "♣B"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]])
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]])
[6 [7 "♣" "♣7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:296:3).
; Unable to resolve symbol: n-apply-strategy-entry in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/ase
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:52).
; Assert failed: (= 0 (count (filter nil? %)))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:57:11).
; Unable to resolve symbol: is in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: cards.clj
#'kata-0100-basics-in-15-min.cards/winner
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/c
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:57)
there are wrong keys in (:♠7 :♠9 :♠B :♠11 :♠K)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:53).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " ck-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♣" "♣9"] [14 "♣" "♣A"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] [11 "♠" "♠B"] [11 "♠" "♠B"] [13 "♠" "♠K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:57)
there are wrong keys in (:♠7 :♠9 :♠B :♠11 :♠K)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:53).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " ck-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♠" "♠B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ()
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/ase
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:57)
there are wrong keys in (:♦️B :♦️D :♦️8 :7♠ :♣B :♣A :♣7 :♣K)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:53).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " ck-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/h
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [11 "♣" "♣B"] [12 "♦️" "♦️D"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♦️" "♦️B"] [12 "♦️" "♦️D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [1 [12 "♦️" "♦️D"] [13 "♣" "♣K"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♠" "♠7"] [12 "♦️" "♦️D"]] [5 [7 "♣" "♣7"] [12 "♦️" "♦️D"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♦️" "♦️B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♦️" "♦️B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [2 [12 "♦️" "♦️D"] [14 "♣" "♣A"]] [2 [11 "♦️" "♦️B"] [13 "♣" "♣K"]])
[1 [11 "♣" "♣B"] [12 "♦️" "♦️D"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/h
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/unique-or-empty
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pairs, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [2 4 2]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pairs, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [12 "♠" "♠D"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [4 [7 "♠" "♠7"] [11 "♥" "♥B"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([4 [7 "♠" "♠7"] [11 "♥" "♥B"]]
 [4 [7 "♠" "♠7"] [11 "♠" "♠B"]]
 [5 [9 "♠" "♠9"] [14 "♠" "♠A"]]
 [7 [7 "♠" "♠7"] [14 "♠" "♠A"]]
 [3 [11 "♠" "♠B"] [14 "♠" "♠A"]]
 [3 [11 "♥" "♥B"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [9 "♠" "♠9"] [11 "♠" "♠B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [0 [11 "♥" "♥B"] [11 "♠" "♠B"]]
 [0 [11 "♠" "♠B"] [11 "♥" "♥B"]]
 [0 [11 "♠" "♠B"] [11 "♠" "♠B"]]
 [0 [7 "♠" "♠7"] [7 "♠" "♠7"]]
 [0 [14 "♠" "♠A"] [14 "♠" "♠A"]]
 [0 [11 "♥" "♥B"] [11 "♥" "♥B"]]
 [0 [9 "♠" "♠9"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [12 "♠" "♠D"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [4 [7 "♠" "♠7"] [11 "♥" "♥B"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([4 [7 "♠" "♠7"] [11 "♥" "♥B"]]
 [4 [7 "♠" "♠7"] [11 "♠" "♠B"]]
 [5 [9 "♠" "♠9"] [14 "♠" "♠A"]]
 [7 [7 "♠" "♠7"] [14 "♠" "♠A"]]
 [3 [11 "♠" "♠B"] [14 "♠" "♠A"]]
 [3 [11 "♥" "♥B"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [9 "♠" "♠9"] [11 "♠" "♠B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [0 [11 "♥" "♥B"] [11 "♠" "♠B"]]
 [0 [11 "♠" "♠B"] [11 "♥" "♥B"]]
 [0 [11 "♠" "♠B"] [11 "♠" "♠B"]]
 [0 [7 "♠" "♠7"] [7 "♠" "♠7"]]
 [0 [14 "♠" "♠A"] [14 "♠" "♠A"]]
 [0 [11 "♥" "♥B"] [11 "♥" "♥B"]]
 [0 [9 "♠" "♠9"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-get-card-with-value
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♥" "♥B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♠" "♠B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/ase
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/h
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-try-find-value
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:246)
in single-strategies, a value may appear only once!
expected: (unique-or-empty coll-of-values)
  actual: (not (unique-or-empty [1 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-try-find-value (form-init8500820721721687694.clj:243).
; Assert failed: (is (unique-or-empty coll-of-values) "in single-strategies, a value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:246)
in single-strategies, a value may appear only once!
expected: (unique-or-empty coll-of-values)
  actual: (not (unique-or-empty [1 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-try-find-value (form-init8500820721721687694.clj:243).
; Assert failed: (is (unique-or-empty coll-of-values) "in single-strategies, a value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [1 6 5 7 3 2 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:246)
in single-strategies, a value may appear only once!
expected: (unique-or-empty coll-of-values)
  actual: (not (unique-or-empty [1 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-try-find-value (form-init8500820721721687694.clj:243).
; Assert failed: (is (unique-or-empty coll-of-values) "in single-strategies, a value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[6 [7 "♠" "♠7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [3 4 7 3 2]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/start-turn
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(try-find-pair, all: ([6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [6 [7 ♠ ♠7] [13 ♠ ♠K]] [6 [7 ♠ ♠7] [13 ♣ ♣K]] [6 [7 ♦️ ♦️7] [13 ♠ ♠K]] [5 [7 ♠ ♠7] [12 ♥ ♥D]] [5 [7 ♦️ ♦️7] [12 ♥ ♥D]])
try-find-pair, all: ([4 [9 ♠ ♠9] [13 ♠ ♠K]] [4 [9 ♠ ♠9] [13 ♣ ♣K]] [4 [7 ♠ ♠7] [11 ♠ ♠B]] [4 [7 ♦️ ♦️7] [11 ♠ ♠B]])
try-find-pair, all: ([3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [3 [7 ♠ ♠7] [10 ♥ ♥10]] [3 [9 ♠ ♠9] [12 ♥ ♥D]] [3 [10 ♥ ♥10] [13 ♣ ♣K]] [3 [10 ♥ ♥10] [13 ♠ ♠K]])
[6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [13 ♣ ♣K] [4 [9 ♠ ♠9] [13 ♠ ♠K]] [11 ♠ ♠B] [3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [9 ♠ ♠9])
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-shuffle-deck
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:1:8034).
; Can't take value of a macro: #'clojure.core/comment
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck [],
 :all-cards
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck
 ([7 "♦️" "♦️7"]
  [8 "♦️" "♦️8"]
  [9 "♦️" "♦️9"]
  [10 "♦️" "♦️10"]
  [11 "♦️" "♦️B"]
  [12 "♦️" "♦️D"]
  [13 "♦️" "♦️K"]
  [14 "♦️" "♦️A"]
  [7 "♥" "♥7"]
  [8 "♥" "♥8"]
  [9 "♥" "♥9"]
  [10 "♥" "♥10"]
  [11 "♥" "♥B"]
  [12 "♥" "♥D"]
  [13 "♥" "♥K"]
  [14 "♥" "♥A"]
  [7 "♠" "♠7"]
  [8 "♠" "♠8"]
  [9 "♠" "♠9"]
  [10 "♠" "♠10"]
  [11 "♠" "♠B"]
  [12 "♠" "♠D"]
  [13 "♠" "♠K"]
  [14 "♠" "♠A"]
  [7 "♣" "♣7"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [10 "♣" "♣10"]
  [11 "♣" "♣B"]
  [12 "♣" "♣D"]
  [13 "♣" "♣K"]
  [14 "♣" "♣A"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1 {:name "Armin", :points 0, :at-hand #{}},
  :player-2 {:name "Benno", :points 0, :at-hand #{}}},
 :deck
 [[10 "♠" "♠10"]
  [11 "♣" "♣B"]
  [12 "♦️" "♦️D"]
  [12 "♣" "♣D"]
  [13 "♠" "♠K"]
  [7 "♠" "♠7"]
  [10 "♣" "♣10"]
  [13 "♦️" "♦️K"]
  [9 "♥" "♥9"]
  [14 "♣" "♣A"]
  [7 "♦️" "♦️7"]
  [8 "♣" "♣8"]
  [9 "♠" "♠9"]
  [13 "♥" "♥K"]
  [12 "♠" "♠D"]
  [8 "♦️" "♦️8"]
  [10 "♦️" "♦️10"]
  [8 "♥" "♥8"]
  [14 "♥" "♥A"]
  [13 "♣" "♣K"]
  [14 "♠" "♠A"]
  [11 "♥" "♥B"]
  [9 "♣" "♣9"]
  [12 "♥" "♥D"]
  [10 "♥" "♥10"]
  [7 "♣" "♣7"]
  [11 "♠" "♠B"]
  [9 "♦️" "♦️9"]
  [14 "♦️" "♦️A"]
  [11 "♦️" "♦️B"]
  [7 "♥" "♥7"]
  [8 "♠" "♠8"]]}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1
  {:name "Benno",
   :points 0,
   :at-hand
   ([14 "♠" "♠A"]
    [11 "♥" "♥B"]
    [7 "♥" "♥7"]
    [13 "♦️" "♦️K"]
    [12 "♠" "♠D"]
    [11 "♠" "♠B"]
    [10 "♣" "♣10"]
    [11 "♦️" "♦️B"])},
  :player-2
  {:name "Armin",
   :points 0,
   :at-hand
   ([12 "♦️" "♦️D"] [7 "♠" "♠7"] [14 "♣" "♣A"] [8 "♠" "♠8"] [13 "♠" "♠K"] [12 "♥" "♥D"] [9 "♥" "♥9"] [7 "♦️" "♦️7"])}},
 :deck
 ([8 "♥" "♥8"]
  [10 "♦️" "♦️10"]
  [7 "♣" "♣7"]
  [13 "♥" "♥K"]
  [11 "♣" "♣B"]
  [10 "♠" "♠10"]
  [8 "♦️" "♦️8"]
  [12 "♣" "♣D"]
  [9 "♦️" "♦️9"]
  [14 "♦️" "♦️A"]
  [10 "♥" "♥10"]
  [14 "♥" "♥A"]
  [8 "♣" "♣8"]
  [9 "♣" "♣9"]
  [13 "♣" "♣K"]
  [9 "♠" "♠9"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/a-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[2 [7 "♦️" "♦️7"] [9 "♦️" "♦️9"]]
 [1 [7 "♦️" "♦️7"] [8 "♦️" "♦️8"]]
 [1 [8 "♦️" "♦️8"] [9 "♦️" "♦️9"]]
 [0 [8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
 [0 [7 "♦️" "♦️7"] [7 "♦️" "♦️7"]]
 [0 [9 "♦️" "♦️9"] [9 "♦️" "♦️9"]]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [12 "♠" "♠D"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [4 [7 "♠" "♠7"] [11 "♥" "♥B"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([4 [7 "♠" "♠7"] [11 "♥" "♥B"]]
 [4 [7 "♠" "♠7"] [11 "♠" "♠B"]]
 [5 [9 "♠" "♠9"] [14 "♠" "♠A"]]
 [7 [7 "♠" "♠7"] [14 "♠" "♠A"]]
 [3 [11 "♠" "♠B"] [14 "♠" "♠A"]]
 [3 [11 "♥" "♥B"] [14 "♠" "♠A"]]
 [2 [9 "♠" "♠9"] [11 "♥" "♥B"]]
 [2 [9 "♠" "♠9"] [11 "♠" "♠B"]]
 [2 [7 "♠" "♠7"] [9 "♠" "♠9"]]
 [0 [11 "♥" "♥B"] [11 "♠" "♠B"]]
 [0 [11 "♠" "♠B"] [11 "♥" "♥B"]]
 [0 [11 "♠" "♠B"] [11 "♠" "♠B"]]
 [0 [7 "♠" "♠7"] [7 "♠" "♠7"]]
 [0 [14 "♠" "♠A"] [14 "♠" "♠A"]]
 [0 [11 "♥" "♥B"] [11 "♥" "♥B"]]
 [0 [9 "♠" "♠9"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [1 2 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♥" "♥B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♠" "♠B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-apply-strategy-entry
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/ase
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/h
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:246)
in single-strategies, a value may appear only once!
expected: (unique-or-empty coll-of-values)
  actual: (not (unique-or-empty [1 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-try-find-value (form-init8500820721721687694.clj:243).
; Assert failed: (is (unique-or-empty coll-of-values) "in single-strategies, a value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [1 6 5 7 3 2 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/start-turn
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(try-find-pair, all: ([6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [6 [7 ♠ ♠7] [13 ♠ ♠K]] [6 [7 ♠ ♠7] [13 ♣ ♣K]] [6 [7 ♦️ ♦️7] [13 ♠ ♠K]] [5 [7 ♠ ♠7] [12 ♥ ♥D]] [5 [7 ♦️ ♦️7] [12 ♥ ♥D]])
try-find-pair, all: ([4 [9 ♠ ♠9] [13 ♠ ♠K]] [4 [9 ♠ ♠9] [13 ♣ ♣K]] [4 [7 ♠ ♠7] [11 ♠ ♠B]] [4 [7 ♦️ ♦️7] [11 ♠ ♠B]])
try-find-pair, all: ([3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [3 [7 ♠ ♠7] [10 ♥ ♥10]] [3 [9 ♠ ♠9] [12 ♥ ♥D]] [3 [10 ♥ ♥10] [13 ♣ ♣K]] [3 [10 ♥ ♥10] [13 ♠ ♠K]])
[6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [13 ♣ ♣K] [4 [9 ♠ ♠9] [13 ♠ ♠K]] [11 ♠ ♠B] [3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [9 ♠ ♠9])
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:49:10).
; Unable to resolve symbol: n-create-back-mapping in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-back-mapping
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{[11 "♣" "♣B"] :♣B,
 [10 "♣" "♣10"] :♣10,
 [8 "♥" "♥8"] :♥8,
 [7 "♦️" "♦️7"] :♦️7,
 [9 "♠" "♠9"] :♠9,
 [9 "♣" "♣9"] :♣9,
 [10 "♥" "♥10"] :♥10,
 [7 "♣" "♣7"] :♣7,
 [13 "♥" "♥K"] :♥K,
 [14 "♠" "♠A"] :♠A,
 [14 "♦️" "♦️A"] :♦️A,
 [12 "♠" "♠D"] :♠D,
 [14 "♥" "♥A"] :♥A,
 [14 "♣" "♣A"] :♣A,
 [8 "♦️" "♦️8"] :♦️8,
 [7 "♠" "♠7"] :♠7,
 [7 "♥" "♥7"] :♥7,
 [12 "♥" "♥D"] :♥D,
 [13 "♠" "♠K"] :♠K,
 [9 "♥" "♥9"] :♥9,
 [10 "♠" "♠10"] :♠10,
 [11 "♦️" "♦️B"] :♦️B,
 [8 "♠" "♠8"] :♠8,
 [11 "♥" "♥B"] :♥B,
 [13 "♦️" "♦️K"] :♦️K,
 [11 "♠" "♠B"] :♠B,
 [10 "♦️" "♦️10"] :♦️10,
 [13 "♣" "♣K"] :♣K,
 [12 "♦️" "♦️D"] :♦️D,
 [12 "♣" "♣D"] :♣D,
 [8 "♣" "♣8"] :♣8,
 [9 "♦️" "♦️9"] :♦️9}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/back-map
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/k
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:79)
there are wrong keys in ([8 "♠" "♠8"] [7 "♠" "♠7"])
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 2))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:75).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " c-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/k
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:79)
there are wrong keys in ([8 "♠" "♠8"] [7 "♠" "♠7"])
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 2))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:75).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " c-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/back-map
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{[11 "♣" "♣B"] :♣B,
 [10 "♣" "♣10"] :♣10,
 [8 "♥" "♥8"] :♥8,
 [7 "♦️" "♦️7"] :♦️7,
 [9 "♠" "♠9"] :♠9,
 [9 "♣" "♣9"] :♣9,
 [10 "♥" "♥10"] :♥10,
 [7 "♣" "♣7"] :♣7,
 [13 "♥" "♥K"] :♥K,
 [14 "♠" "♠A"] :♠A,
 [14 "♦️" "♦️A"] :♦️A,
 [12 "♠" "♠D"] :♠D,
 [14 "♥" "♥A"] :♥A,
 [14 "♣" "♣A"] :♣A,
 [8 "♦️" "♦️8"] :♦️8,
 [7 "♠" "♠7"] :♠7,
 [7 "♥" "♥7"] :♥7,
 [12 "♥" "♥D"] :♥D,
 [13 "♠" "♠K"] :♠K,
 [9 "♥" "♥9"] :♥9,
 [10 "♠" "♠10"] :♠10,
 [11 "♦️" "♦️B"] :♦️B,
 [8 "♠" "♠8"] :♠8,
 [11 "♥" "♥B"] :♥B,
 [13 "♦️" "♦️K"] :♦️K,
 [11 "♠" "♠B"] :♠B,
 [10 "♦️" "♦️10"] :♦️10,
 [13 "♣" "♣K"] :♣K,
 [12 "♦️" "♦️D"] :♦️D,
 [12 "♣" "♣D"] :♣D,
 [8 "♣" "♣8"] :♣8,
 [9 "♦️" "♦️9"] :♦️9}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠8 :♠7)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/k
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠8 :♠7)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [9 "♠" "♠9"] [11 "♠" "♠B"] [11 "♠" "♠B"] [13 "♠" "♠K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(:♠7 :♠9 :♠B :♠B :♠K)
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:83)
there are wrong keys in (nil)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:77).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " c-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:77)
kata-0100-basics-in-15-min.cards/eval16795 (form-init8500820721721687694.clj:91)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:57)
there are wrong keys in (:♠7 :♠9 :♠B :♠11 :♠K)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/c (form-init8500820721721687694.clj:53).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " ck-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:83)
there are wrong keys in (nil)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:77).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " c-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(nil)
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:83)
there are wrong keys in (nil)
expected: (= 0 (count (filter nil? %)))
  actual: (not (= 0 1))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/k (form-init8500820721721687694.clj:77).
; Assert failed: (is (= 0 (count (filter nil? %))) (str "there are wrong keys in " c-coll))
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-create-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
{:players
 {:next-turn [:player-1 :player-2],
  :player-1
  {:name "Benno",
   :points 0,
   :at-hand
   ([8 "♠" "♠8"]
    [9 "♦️" "♦️9"]
    [11 "♦️" "♦️B"]
    [10 "♦️" "♦️10"]
    [14 "♠" "♠A"]
    [10 "♠" "♠10"]
    [7 "♥" "♥7"]
    [14 "♥" "♥A"])},
  :player-2
  {:name "Armin",
   :points 0,
   :at-hand
   ([8 "♥" "♥8"]
    [12 "♦️" "♦️D"]
    [8 "♦️" "♦️8"]
    [12 "♣" "♣D"]
    [11 "♥" "♥B"]
    [10 "♣" "♣10"]
    [13 "♦️" "♦️K"]
    [10 "♥" "♥10"])}},
 :deck
 ([13 "♣" "♣K"]
  [8 "♣" "♣8"]
  [9 "♠" "♠9"]
  [13 "♠" "♠K"]
  [11 "♣" "♣B"]
  [13 "♥" "♥K"]
  [14 "♦️" "♦️A"]
  [9 "♥" "♥9"]
  [7 "♦️" "♦️7"]
  [7 "♠" "♠7"]
  [11 "♠" "♠B"]
  [12 "♥" "♥D"]
  [12 "♠" "♠D"]
  [14 "♣" "♣A"]
  [7 "♣" "♣7"]
  [9 "♣" "♣9"])}
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([2 [7 "♠" "♠7"] [9 "♠" "♠9"]])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♥" "♥B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[11 "♣" "♣B"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([2 [12 "♣" "♣D"] [14 "♣" "♣A"]] [2 [11 "♠" "♠B"] [13 "♣" "♣K"]] [2 [11 "♣" "♣B"] [13 "♣" "♣K"]] [1 [12 "♣" "♣D"] [13 "♣" "♣K"]] [1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [11 "♣" "♣B"] [12 "♣" "♣D"]] [1 [11 "♠" "♠B"] [12 "♣" "♣D"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [5 [8 "♦️" "♦️8"] [13 "♣" "♣K"]] [5 [7 "♣" "♣7"] [12 "♣" "♣D"]] [5 [7 "♠" "♠7"] [12 "♣" "♣D"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [8 "♦️" "♦️8"] [14 "♣" "♣A"]] [6 [7 "♣" "♣7"] [13 "♣" "♣K"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♠" "♠B"]] [3 [11 "♣" "♣B"] [14 "♣" "♣A"]] [3 [11 "♠" "♠B"] [14 "♣" "♣A"]] [3 [8 "♦️" "♦️8"] [11 "♣" "♣B"]])
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (form-init8500820721721687694.clj:213)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [1 6 5 7 3 2 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([1 [13 "♣" "♣K"] [14 "♣" "♣A"]] [1 [7 "♣" "♣7"] [8 "♦️" "♦️8"]] [1 [7 "♠" "♠7"] [8 "♦️" "♦️8"]] [7 [7 "♣" "♣7"] [14 "♣" "♣A"]] [7 [7 "♠" "♠7"] [14 "♣" "♣A"]])
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
(try-find-pair, all: ([6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [6 [7 ♠ ♠7] [13 ♠ ♠K]] [6 [7 ♠ ♠7] [13 ♣ ♣K]] [6 [7 ♦️ ♦️7] [13 ♠ ♠K]] [5 [7 ♠ ♠7] [12 ♥ ♥D]] [5 [7 ♦️ ♦️7] [12 ♥ ♥D]])
try-find-pair, all: ([4 [9 ♠ ♠9] [13 ♠ ♠K]] [4 [9 ♠ ♠9] [13 ♣ ♣K]] [4 [7 ♠ ♠7] [11 ♠ ♠B]] [4 [7 ♦️ ♦️7] [11 ♠ ♠B]])
try-find-pair, all: ([3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [3 [7 ♠ ♠7] [10 ♥ ♥10]] [3 [9 ♠ ♠9] [12 ♥ ♥D]] [3 [10 ♥ ♥10] [13 ♣ ♣K]] [3 [10 ♥ ♥10] [13 ♠ ♠K]])
[6 [7 ♦️ ♦️7] [13 ♣ ♣K]] [13 ♣ ♣K] [4 [9 ♠ ♠9] [13 ♠ ♠K]] [11 ♠ ♠B] [3 [7 ♦️ ♦️7] [10 ♥ ♥10]] [9 ♠ ♠9])
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/start-turn
clj꞉kata-0100-basics-in-15-min.cards꞉> 
try-find-pair, all: ([6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]] [6 [7 "♠" "♠7"] [13 "♠" "♠K"]] [6 [7 "♠" "♠7"] [13 "♣" "♣K"]] [6 [7 "♦️" "♦️7"] [13 "♠" "♠K"]] [5 [7 "♠" "♠7"] [12 "♥" "♥D"]] [5 [7 "♦️" "♦️7"] [12 "♥" "♥D"]])
try-find-pair, all: ([4 [9 "♠" "♠9"] [13 "♠" "♠K"]] [4 [9 "♠" "♠9"] [13 "♣" "♣K"]] [4 [7 "♠" "♠7"] [11 "♠" "♠B"]] [4 [7 "♦️" "♦️7"] [11 "♠" "♠B"]])
try-find-pair, all: ([3 [7 "♦️" "♦️7"] [10 "♥" "♥10"]] [3 [7 "♠" "♠7"] [10 "♥" "♥10"]] [3 [9 "♠" "♠9"] [12 "♥" "♥D"]] [3 [10 "♥" "♥10"] [13 "♣" "♣K"]] [3 [10 "♥" "♥10"] [13 "♠" "♠K"]])
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-try-find-pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/react-strategy
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (IllegalArgumentException) at kata-0100-basics-in-15-min.cards/n-all-pairs$iter$fn$iter$fn (cards.clj:193).
; Don't know how to create ISeq from: clojure.lang.Keyword
clj꞉kata-0100-basics-in-15-min.cards꞉> 
clojure.lang.RT/seqFrom (RT.java:557)
clojure.lang.RT/seq (RT.java:537)
clojure.lang.RT/first (RT.java:693)
clojure.core/first (core.clj:55)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:193)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:191)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/reduce1 (core.clj:932)
clojure.core/set (core.clj:4101)
clojure.core/set (core.clj:4093)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:191)
kata-0100-basics-in-15-min.cards/n-all-pairs (cards.clj:175)
kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:215)
kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (form-init8500820721721687694.clj:208)
kata-0100-basics-in-15-min.cards/n-try-find-pair (form-init8500820721721687694.clj:234)
kata-0100-basics-in-15-min.cards/n-try-find-pair (form-init8500820721721687694.clj:231)
kata-0100-basics-in-15-min.cards/n-apply-strategy-entry (form-init8500820721721687694.clj:246)
kata-0100-basics-in-15-min.cards/n-apply-strategy-entry (form-init8500820721721687694.clj:235)
kata-0100-basics-in-15-min.cards/start-turn (form-init8500820721721687694.clj:296)
clojure.core/map (core.clj:2757)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.RT/seq (RT.java:535)
clojure.core/seq (core.clj:139)
clojure.core/filter (core.clj:2813)
clojure.lang.LazySeq/sval (LazySeq.java:42)
clojure.lang.LazySeq/seq (LazySeq.java:51)
clojure.lang.LazySeq/first (LazySeq.java:73)
clojure.lang.RT/first (RT.java:692)
clojure.core/first (core.clj:55)
kata-0100-basics-in-15-min.cards/start-turn (form-init8500820721721687694.clj:298)
kata-0100-basics-in-15-min.cards/start-turn (form-init8500820721721687694.clj:289)
kata-0100-basics-in-15-min.cards/eval16848 (form-init8500820721721687694.clj:314)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/b-game
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[10 "♥" "♥10"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[10 "♥" "♥10"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Jack-in done.
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 261.013791 msecs"
"Elapsed time: 0.135 msecs"
"Elapsed time: 0.199041 msecs"
"Elapsed time: 4.030041 msecs"
"Elapsed time: 421.64075 msecs"
"Elapsed time: 1011.592958 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
abc
589038563103416
27.06.2022
589038591912166
27.06.2022
111111111
30.05.2012
true
true
"Elapsed time: 0.008292 msecs"
"Elapsed time: 0.024209 msecs"
"Elapsed time: 4.17E-4 msecs"
[3 5 7]
(5 7)
(7)
()
20
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
finally...
:a :b :c :d
:a :d :x :y :z
A B X Y
A D nil
A :-/ B
all values:  (0 1 2 3 4 5 6 7 8 9)
a =  3
b =  4
c =  5
all values:  (0 1 2)
a =  nil
b =  nil
c =  nil
all values:  (0 1 2 3 4)
a =  3
b =  4
c =  nil
all values:  (15 16 17 18 19 20 21 22 23 24 25 26 27 28 29)
a =  18
b =  19
c =  20
false
42
:cheeseburger
finished both  [24258 -620]
final value should be: 25000, is:  24258
finished both  [25000 -1061]
final value should be: 25000, is:  25000
301
500
"Elapsed time: 119.03975 msecs"
"Elapsed time: 47.715583 msecs"
"Elapsed time: 150.044125 msecs"
"Elapsed time: 854.708792 msecs"
"Elapsed time: 559.891292 msecs"
"Elapsed time: 442.201625 msecs"
"Elapsed time: 437.841916 msecs"
-------------------------
clojure.core/derive
([tag parent] [h tag parent])
  Establishes a parent/child relationship between parent and
  tag. Parent must be a namespace-qualified symbol or keyword and
  child can be either a namespace-qualified symbol or keyword or a
  class. h must be a hierarchy obtained from make-hierarchy, if not
  supplied defaults to, and modifies, the global hierarchy.
; Warning: protocol #'kata-0100-basics-in-15-min.core/Append is overwriting function append
-------------------------
kata-0100-basics-in-15-min.core/Append
  This protocol lets us add things to the end of a collection.
-------------------------
kata-0100-basics-in-15-min.core/append
([coll x])
  Appends x to the end of collection coll.
Adding 2 and 2 together...
Adding 2 and 2 together...
nil
Adding 2 and 2 together...
4
Adding 2 and 2 together...
4-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
-------- dbg -------->>
(/ 1 (+ 2 1))  =>  1/3
<<------ dbg --------

-------- dbg -------->>
(take 10 (map (partial + 20) (range 100)))  =>  (20 21 22 23 24 25 26 27 28 29)
<<------ dbg --------

frist
second
15
[36 25 16 9 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: cards.clj
#'kata-0100-basics-in-15-min.cards/winner
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 250.028709 msecs"
"Elapsed time: 0.146416 msecs"
"Elapsed time: 0.188709 msecs"
"Elapsed time: 3.907417 msecs"
"Elapsed time: 489.10725 msecs"
"Elapsed time: 1463.276041 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
abc
589144659479541
27.06.2022
589144662758958
27.06.2022
111111111
30.05.2012
true
true
"Elapsed time: 0.008708 msecs"
"Elapsed time: 0.032125 msecs"
"Elapsed time: 4.58E-4 msecs"
[3 5 7]
(5 7)
(7)
()
20
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
finally...
:a :b :c :d
:a :d :x :y :z
A B X Y
A D nil
A :-/ B
all values:  (0 1 2 3 4 5 6 7 8 9)
a =  3
b =  4
c =  5
all values:  (0 1 2)
a =  nil
b =  nil
c =  nil
all values:  (0 1 2 3 4)
a =  3
b =  4
c =  nil
all values:  (15 16 17 18 19 20 21 22 23 24 25 26 27 28 29)
a =  18
b =  19
c =  20
false
42
:cheeseburger
finished both  [20543 -4273]
final value should be: 25000, is:  20543
finished both  [25000 259]
final value should be: 25000, is:  25000
437
500
"Elapsed time: 89.219125 msecs"
"Elapsed time: 47.987084 msecs"
"Elapsed time: 90.840666 msecs"
"Elapsed time: 781.137292 msecs"
"Elapsed time: 535.626209 msecs"
"Elapsed time: 484.646667 msecs"
"Elapsed time: 565.329834 msecs"
-------------------------
clojure.core/derive
([tag parent] [h tag parent])
  Establishes a parent/child relationship between parent and
  tag. Parent must be a namespace-qualified symbol or keyword and
  child can be either a namespace-qualified symbol or keyword or a
  class. h must be a hierarchy obtained from make-hierarchy, if not
  supplied defaults to, and modifies, the global hierarchy.
; Warning: protocol #'kata-0100-basics-in-15-min.core/Append is overwriting function append
-------------------------
kata-0100-basics-in-15-min.core/Append
  This protocol lets us add things to the end of a collection.
-------------------------
kata-0100-basics-in-15-min.core/append
([coll x])
  Appends x to the end of collection coll.
Adding 2 and 2 together...
Adding 2 and 2 together...
nil
Adding 2 and 2 together...
4
Adding 2 and 2 together...
4-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
-------- dbg -------->>
(/ 1 (+ 2 1))  =>  1/3
<<------ dbg --------

-------- dbg -------->>
(take 10 (map (partial + 20) (range 100)))  =>  (20 21 22 23 24 25 26 27 28 29)
<<------ dbg --------

frist
second
15
[36 25 16 9 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13153 (form-init5585753402963198953.clj:64).
; Assert failed:
(= (+ 3 4) (- 10 4))
¦  ¦       ¦
¦  7       6 
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
false
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13170 (form-init5585753402963198953.clj:2157).
; Assert failed:
(= 5 6)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13227 (form-init5585753402963198953.clj:2159).
; Assert failed:
(apply p args)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/square
clj꞉kata-0100-basics-in-15-min.core꞉> 
25
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/square
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/square (form-init5585753402963198953.clj:2157).
; Assert failed: (< n 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
16
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2159:16).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:2155:3).
; Can't take value of a macro: #'erdos.assert/assert
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__13384#] (< 6 p1__13384#)) 5
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__13393#] (< 6 p1__13393#)) 5
true?  (clojure.core/list (fn* [p1__13393#] (< 6 p1__13393#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Can't take value of a macro: #'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(make-sure (fn* [p1__13397#] (< 6 p1__13397#)) 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__13401#] (< 6 p1__13401#)) 5
true?  (clojure.core/list (fn* [p1__13401#] (< 6 p1__13401#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__13410#] (< 6 p1__13410#)) 5
true?  ((fn* [p1__13410#] (< 6 p1__13410#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
true?  ((fn* [p1__13440#] (< 6 p1__13440#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
true?  ((fn* [p1__13449#] (< 6 p1__13449#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval13458 (form-init5585753402963198953.clj:2161).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
true?  ((fn* [p1__13461#] (< 6 p1__13461#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
true?  (clojure.core/eval ((fn* [p1__13470#] (< 6 p1__13470#)) 5))
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__13520#] (< 6 p1__13520#)) 5
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2161:3).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
kata_0100_basics_in_15_min.core$eval13530$fn__13531
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(make-sure (fn* [p1__13540#] (< 6 p1__13540#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(make-sure (fn* [p1__13594#] (< 6 p1__13594#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
(make-sure (fn* [p1__13596#] (< 6 p1__13596#)) 5)
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2163:3).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2163:3).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2163:3).
; class clojure.lang.Cons cannot be cast to class clojure.lang.IFn (clojure.lang.Cons and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (kata-0100-basics-in-15-min.core/f kata-0100-basics-in-15-min.core/arg)
 nil
 (do
  (throw
   (new
    java.lang.AssertionError
    (clojure.core/str
     "Assert failed: "
     (clojure.core/pr-str '(kata-0100-basics-in-15-min.core/f kata-0100-basics-in-15-min.core/arg)))))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 ((fn* [p1__13667#] (< 6 p1__13667#)) kata-0100-basics-in-15-min.core/arg)
 nil
 (do
  (throw
   (new
    java.lang.AssertionError
    (clojure.core/str
     "Assert failed: "
     (clojure.core/pr-str '((fn* [p1__13667#] (< 6 p1__13667#)) kata-0100-basics-in-15-min.core/arg)))))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 ((fn* [p1__13676#] (< 6 p1__13676#)) 5)
 nil
 (do
  (throw
   (new
    java.lang.AssertionError
    (clojure.core/str "Assert failed: " (clojure.core/pr-str '((fn* [p1__13676#] (< 6 p1__13676#)) 5)))))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (clojure.core/assert ((fn* [p1__13694#] (< 6 p1__13694#)) 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13699 (form-init5585753402963198953.clj:2163).
; Assert failed: ((fn* [p1__13698#] (< 6 p1__13698#)) 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__13709#] (< 6 p1__13709#)) 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13714 (form-init5585753402963198953.clj:2163).
; Assert failed:
((fn* [p1__13713#] (< 6 p1__13713#)) 5)
¦                  ¦
false              false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
10
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13764 (form-init5585753402963198953.clj:2163).
; Assert failed:
((fn* [p1__13763#] (< 60 p1__13763#)) (+ 5 5))
¦                  ¦                  ¦
false              false              10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/float?]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8034).
; Can't take value of a macro: #'erdos.assert/assert
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13793 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
100
clj꞉kata-0100-basics-in-15-min.core꞉> 
100
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13860 (form-init5585753402963198953.clj:2167).
; Assert failed:
((fn [n] (< (* n n) 100)) 75)
¦        ¦  ¦
false    ¦  5625 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13885 (form-init5585753402963198953.clj:2167).
; Assert failed:
((fn [n] (< (* n n) 100)) 10)
¦        ¦  ¦
false    ¦  100 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
9
clj꞉kata-0100-basics-in-15-min.core꞉> 
9
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13965 (form-init5585753402963198953.clj:2168).
; Assert failed:
((fn* [p1__13964#] (< (* p1__13964# p1__13964#) 100)) 10)
¦                  ¦  ¦
false              ¦  100 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval13992 (form-init5585753402963198953.clj:2168).
; Assert failed:
((fn* [p1__13991#] (< (* p1__13991# p1__13991#) 100)) (+ 10 20))
¦                  ¦  ¦                               ¦
false              ¦  900                             30 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14022 (form-init5585753402963198953.clj:2169).
; Assert failed:
((fn* [p1__14021#] (< (* p1__14021# p1__14021#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14053 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (clojure.core/eval (+ 5 5)))
¦       ¦                  ¦
false   10                 10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
9
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14101 (form-init5585753402963198953.clj:2169).
; Assert failed:
((fn* [p1__14100#] (< (* p1__14100# p1__14100#) 100)) (clojure.core/eval n))
¦                  ¦  ¦                               ¦
false              ¦  400                             20 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:2167:3).
; Unable to resolve symbol: a__14130__auto__ in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:2167:3).
; No such var: kata-0100-basics-in-15-min.core/arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14163 (form-init5585753402963198953.clj:2167).
; Assert failed:
(float? a__14157__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14187 (form-init5585753402963198953.clj:2167).
; Assert failed:
(float? a__14181__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14216 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
9
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14260 (form-init5585753402963198953.clj:2169).
; Assert failed:
((fn* [p1__14259#] (< (* p1__14259# p1__14259#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__14287#] (< 6 p1__14287#)) 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14290 (form-init5585753402963198953.clj:2167).
; Assert failed:
((fn [n] (< (* n n) 100)) 20)
¦        ¦  ¦
false    ¦  400 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/square
clj꞉kata-0100-basics-in-15-min.core꞉> 
16
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/square (form-init5585753402963198953.clj:2175).
; Assert failed:
((fn* [p1__14316#] (< n p1__14316#)) 5)
¦                  ¦
false              false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14343 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14360 (form-init5585753402963198953.clj:2167).
; Assert failed:
((fn [n] (< (* n n) 100)) 20)
¦        ¦  ¦
false    ¦  400 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14390 (form-init5585753402963198953.clj:2167).
; Assert failed:
((fn [n m] (< (* n m) 100)) 20 40)
¦          ¦  ¦
false      ¦  800 
           false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14416 (form-init5585753402963198953.clj:2167).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14447$fn (form-init5585753402963198953.clj:2167).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval14536$fn (form-init5585753402963198953.clj:2166).
; Wrong number of args (3) passed to: clojure.core/float?
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14557 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval14574$fn (form-init5585753402963198953.clj:2167).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/eval14574/fn--14591/fn--14592
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14674 (form-init5585753402963198953.clj:2166).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
[10.0]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14713 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval14735 (form-init5585753402963198953.clj:2168).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14752 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14774 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14796 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
kata-0100-basics-in-15-min.core/eval14796 (form-init5585753402963198953.clj:2168)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14813 (form-init5585753402963198953.clj:2169).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14839 (form-init5585753402963198953.clj:2170).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14863 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14880 (form-init5585753402963198953.clj:2169).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:2168:3).
; No such var: kata-0100-basics-in-15-min.core/arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14933 (form-init5585753402963198953.clj:2168).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
kata-0100-basics-in-15-min.core/eval14933 (form-init5585753402963198953.clj:2168)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14955 (form-init5585753402963198953.clj:2169).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14972 (form-init5585753402963198953.clj:2170).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval14998 (form-init5585753402963198953.clj:2170).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15024 (form-init5585753402963198953.clj:2171).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15053$fn (form-init5585753402963198953.clj:2169).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15081$fn (form-init5585753402963198953.clj:2170).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15100#] (< 6 p1__15100#)) (5)))) (do (clojure.core/println (5))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15108 (form-init5585753402963198953.clj:2170).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2175:3).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(5)
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2176:3).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(5)
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15145#] (< 6 p1__15145#)) (5)
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15149#] (< 6 p1__15149#)) (5 5)
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15158#] (< 6 p1__15158#)) (5)
; Unexpected error (ClassCastException) macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2176:3).
; class clojure.lang.PersistentList cannot be cast to class clojure.lang.IFn (clojure.lang.PersistentList and clojure.lang.IFn are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15167#] (< 6 p1__15167#)) (5)
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15176#] (< 6 p1__15176#)) (5)
(#function[clojure.core/println] (#function[clojure.core/apply] (fn* [p1__15176#] (< 6 p1__15176#)) (5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15179 (form-init5585753402963198953.clj:2173).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n] (< (* n 4) 100)) (20)
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15183 (form-init5585753402963198953.clj:2174).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15188#] (< (* p1__15188# p1__15188#) 100)) (n)
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15189 (form-init5585753402963198953.clj:2176).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15199#] (< 6 p1__15199#)) (5)
(clojure.core/println (clojure.core/apply kata-0100-basics-in-15-min.core/f 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15208#] (< 6 p1__15208#)) (5)
(clojure.core/println (kata-0100-basics-in-15-min.core/f 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15212#] (< 6 p1__15212#)) (5 5)
(clojure.core/println (kata-0100-basics-in-15-min.core/f 5 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15216#] (< 6 p1__15216#)) (5)
(clojure.core/println (kata-0100-basics-in-15-min.core/f 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15219 (form-init5585753402963198953.clj:2172).
; class java.io.File cannot be cast to class clojure.lang.IFn (java.io.File is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15221 (form-init5585753402963198953.clj:2173).
; class java.io.File cannot be cast to class clojure.lang.IFn (java.io.File is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15224#] (< 6 p1__15224#)) (5)
(clojure.core/println (kata-0100-basics-in-15-min.core/f 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15233#] (< 6 p1__15233#)) (5)
(clojure.core/println ((fn* [p1__15233#] (< 6 p1__15233#)) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
true
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15244#] (< 6 p1__15244#)) (5)
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15244#] (< 6 p1__15244#)) 5))) (do (clojure.core/println 5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
(if (clojure.core/nil? (erdos.assert/assert ((fn [n m] (< (* n m) 100)) 20 4))) (do (clojure.core/println 20 4)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
20 4
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
10.0
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15280 (form-init5585753402963198953.clj:2172).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
10.0
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15297 (form-init5585753402963198953.clj:2172).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
10.0
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
10.0
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15341 (form-init5585753402963198953.clj:2170).
; class java.lang.Double cannot be cast to class clojure.lang.IFn (java.lang.Double is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15359#] (< 6 p1__15359#)) (5)
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15359#] (< 6 p1__15359#)) 5))) (do (clojure.core/println 5) (5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15373#] (< 6 p1__15373#)) (5)
(if
 (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15373#] (< 6 p1__15373#)) 5)))
 (do (clojure.core/println 5) (if (clojure.core/= 1 (clojure.core/count '(5))) (clojure.core/first '(5)) '(5))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
float? ((+ 5.0 5))
10.0
(+ 5.0 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
20 4
(20 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
(if
 (clojure.core/nil? (erdos.assert/assert ((fn [n m] (< (* n m) 100)) 20 4)))
 (do
  (clojure.core/println 20 4)
  (if (clojure.core/= 1 (clojure.core/count '(20 4))) (clojure.core/first '(20 4)) '(20 4))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n] (< (* n 4) 100)) (20)
20
20
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn [n m] (< (* n m) 100)) (20 4)
20 4
(20 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15477#] (< 6 p1__15477#)) (5)
(if
 (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15477#] (< 6 p1__15477#)) 5)))
 (do
  (clojure.core/println 5)
  (if (clojure.core/= 1 (clojure.core/count '(5))) (clojure.core/first '(5)) (clojure.core/vec (5)))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(fn* [p1__15486#] (< 6 p1__15486#)) (5)
(if
 (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15486#] (< 6 p1__15486#)) 5)))
 (do
  (clojure.core/println 5)
  (if (clojure.core/= 1 (clojure.core/count '(5))) (clojure.core/first '(5)) (clojure.core/vec '(5)))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (clojure.core/nil? (erdos.assert/assert ((fn* [p1__15515#] (< 6 p1__15515#)) 5)))
 (do
  (clojure.core/let
   [varg__15508__auto__ (clojure.core/vec '(5))]
   (if
    (clojure.core/= 1 (clojure.core/count varg__15508__auto__))
    (clojure.core/first varg__15508__auto__)
    varg__15508__auto__))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 5.0 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval15536 (form-init5585753402963198953.clj:2173).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (clojure.core/nil? (erdos.assert/assert ((fn [n m] (< (* n m) 100)) 20 4)))
 (do
  (clojure.core/let
   [varg__15508__auto__ (clojure.core/vec '(20 4))]
   (if
    (clojure.core/= 1 (clojure.core/count varg__15508__auto__))
    (clojure.core/first varg__15508__auto__)
    varg__15508__auto__))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
[20 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
20
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval15610 (form-init5585753402963198953.clj:2178).
; Assert failed:
((fn* [p1__15609#] (< (* p1__15609# p1__15609#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 5.0 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15655 (form-init5585753402963198953.clj:2172).
; class clojure.lang.PersistentList cannot be cast to class java.lang.Number (clojure.lang.PersistentList is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15680 (form-init5585753402963198953.clj:2172).
; class clojure.lang.PersistentList cannot be cast to class java.lang.Number (clojure.lang.PersistentList is in unnamed module of loader 'app'; java.lang.Number is in module java.base of loader 'bootstrap')
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (clojure.core/nil? (erdos.assert/assert (float? (+ 5 5))))
 (do
  (clojure.core/let
   [varg__15674__auto__ (clojure.core/vec '((+ 5 5)))]
   (if
    (clojure.core/= 1 (clojure.core/count varg__15674__auto__))
    (clojure.core/first varg__15674__auto__)
    (clojure.core/eval varg__15674__auto__)))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (clojure.core/nil? (erdos.assert/assert (float? (+ 5 5))))
 (do
  (clojure.core/let
   [varg__15701__auto__ (clojure.core/vec '((+ 5 5)))]
   (if
    (clojure.core/= 1 (clojure.core/count varg__15701__auto__))
    (clojure.core/first varg__15701__auto__)
    (clojure.core/eval '((+ 5 5)))))))
clj꞉kata-0100-basics-in-15-min.core꞉> 
20
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15761 (form-init5585753402963198953.clj:2176).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/what-arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
9
clj꞉kata-0100-basics-in-15-min.core꞉> 
[3 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval15772 (form-init5585753402963198953.clj:2163).
; Wrong number of args (2) passed to: kata-0100-basics-in-15-min.core/what-arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(let* [arg__15810__auto__ (kata-0100-basics-in-15-min.core/what-arg 5)] (clojure.core/println arg__15810__auto__))
clj꞉kata-0100-basics-in-15-min.core꞉> 
[10]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6.0]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0 1]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/what-arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
[9]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[3 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/ret-varg
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
[4 5]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil]
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil nil]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil nil]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0 1]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6.0]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
[5.0]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6.0]
[6.0]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil]
[nil]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil nil]
[nil nil]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0 1]
[5.0 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval15916 (form-init5585753402963198953.clj:2197).
; Assert failed:
(float? arg__15910__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval15940$fn (form-init5585753402963198953.clj:2197).
; class clojure.lang.PersistentVector cannot be cast to class java.util.concurrent.Future (clojure.lang.PersistentVector is in unnamed module of loader 'app'; java.util.concurrent.Future is in module java.base of loader 'bootstrap')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6.0]
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil]
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16002 (form-init5585753402963198953.clj:2199).
; Assert failed:
(clojure.core/apply float? arg__15960__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0]
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
[6.0]
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/what-arg
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5.0
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
succ
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16098 (form-init5585753402963198953.clj:2199).
; Assert failed:
(float? arg__16058__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
[nil nil]
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16115 (form-init5585753402963198953.clj:2200).
; Assert failed:
(float? arg__16058__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
[5.0 1]
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16132 (form-init5585753402963198953.clj:2201).
; Assert failed:
(float? arg__16058__auto__)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/do-the-assert
clj꞉kata-0100-basics-in-15-min.core꞉> 
5.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/do-the-assert (form-init5585753402963198953.clj:2168).
; Assert failed:
(f arg)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/val]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/val]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/val]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
30.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16300 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16315 (form-init5585753402963198953.clj:2184).
; Assert failed:
(float? [nil nil])
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16330 (form-init5585753402963198953.clj:2185).
; Assert failed:
(float? [5.0 1])
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert ((fn* [p1__16346#] (< 6 p1__16346#)) 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
30.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16366 (form-init5585753402963198953.clj:2190).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert (float? (+ 5 5)))) (do (+ 5 5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval16385$fn (form-init5585753402963198953.clj:2193).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/eval16385/fn--16402/fn--16403
clj꞉kata-0100-basics-in-15-min.core꞉> 
20
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16435 (form-init5585753402963198953.clj:2194).
; Assert failed:
((fn [n] (< (* n 4) 100)) 29)
¦        ¦  ¦
false    ¦  116 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16461 (form-init5585753402963198953.clj:2196).
; Assert failed:
((fn* [p1__16460#] (< (* p1__16460# p1__16460#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16492 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? 5)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16512 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? 5)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16532 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? 5)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16547 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? 5)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16562 (form-init5585753402963198953.clj:2183).
; Assert failed:
(float? 5)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert (float? 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2183:3).
; Attempting to call unbound fn: #'clojure.core/unquote
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (float? 5)
 nil
 (do
  (clojure.core/println 5 "=" (clojure.core/eval 5))
  (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if
 (float? 5)
 nil
 (do
  (clojure.core/println 5 "=" (clojure.core/eval 5))
  (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5)))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error macroexpanding make-sure at (src/kata_0100_basics_in_15_min/core.clj:2183:3).
; Attempting to call unbound fn: #'clojure.core/unquote
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert (float? 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(if (clojure.core/nil? (erdos.assert/assert (float? 5))) (do 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(do
 (clojure.core/when-not (float? 5) (clojure.core/println 5 "=" (clojure.core/eval 5)))
 (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil = nil
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16702 (form-init5585753402963198953.clj:2186).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 
20 = 20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16723 (form-init5585753402963198953.clj:2199).
; Assert failed:
((fn* [p1__16718#] (< (* p1__16718# p1__16718#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/val] = 20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16760 (form-init5585753402963198953.clj:2199).
; Assert failed:
((fn* [p1__16755#] (< (* p1__16755# p1__16755#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n = (clojure.core/eval n)
#function[clojure.core/val] = 20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16797 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16792#] (< (* p1__16792# p1__16792#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n =20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16834 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16829#] (< (* p1__16829# p1__16829#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
5  =  (#function[clojure.core/eval] 5)
(do
 (clojure.core/when-not (float? 5) (clojure.core/println clojure.core/val " = " (clojure.core/eval 5)))
 (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  (#function[clojure.core/eval] n)
#function[clojure.core/val]  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16873 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16868#] (< (* p1__16868# p1__16868#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  (#function[clojure.core/eval] n)
20  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16910 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16905#] (< (* p1__16905# p1__16905#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  (#function[clojure.core/eval] n)
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval16943 (form-init5585753402963198953.clj:2200).
; class clojure.lang.Var cannot be cast to class clojure.lang.Named (clojure.lang.Var and clojure.lang.Named are in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  (#function[clojure.core/eval] n)
val  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16958 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16953#] (< (* p1__16953# p1__16953#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  (#function[clojure.core/eval] n)
n  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval16995 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn* [p1__16990#] (< (* p1__16990# p1__16990#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
n  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17032 (form-init5585753402963198953.clj:2199).
; Assert failed:
((fn* [p1__17027#] (< (* p1__17027# p1__17027#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17071 (form-init5585753402963198953.clj:2202).
; Assert failed:
((fn* [p1__17064#] (< (* p1__17064# p1__17064#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
(do
 (clojure.core/when-not
  (float? 5)
  (clojure.core/println)
  (clojure.core/println)
  (clojure.core/println '5 " = " (clojure.core/eval 5)))
 (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
clj꞉kata-0100-basics-in-15-min.core꞉> 
6.0
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 1)  =  6
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17144 (form-init5585753402963198953.clj:2187).
; Assert failed:
(float? (+ 5 1))
¦       ¦
false   6 
clj꞉kata-0100-basics-in-15-min.core꞉> 


nil  =  nil
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17163 (form-init5585753402963198953.clj:2188).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 


[nil nil]  =  [nil nil]
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17182 (form-init5585753402963198953.clj:2189).
; Assert failed:
(float? [nil nil])
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(do
 (clojure.core/when-not
  ((fn* [p1__17198#] (< 6 p1__17198#)) 5)
  (clojure.core/println)
  (clojure.core/println)
  (clojure.core/println '5 " = " (clojure.core/eval 5)))
 (clojure.core/when (clojure.core/nil? (erdos.assert/assert ((fn* [p1__17198#] (< 6 p1__17198#)) 5))) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 
30.0
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 5)  =  10
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17220 (form-init5585753402963198953.clj:2195).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval17237 (form-init5585753402963198953.clj:2197).
; Wrong number of args (3) passed to: kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ArityException) at kata-0100-basics-in-15-min.core/eval17239 (form-init5585753402963198953.clj:2198).
; Wrong number of args (1) passed to: kata-0100-basics-in-15-min.core/eval17239/fn--17240
clj꞉kata-0100-basics-in-15-min.core꞉> 


29  =  29
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17247 (form-init5585753402963198953.clj:2199).
; Assert failed:
((fn [n] (< (* n 4) 100)) 29)
¦        ¦  ¦
false    ¦  116 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17277 (form-init5585753402963198953.clj:2201).
; Assert failed:
((fn* [p1__17272#] (< (* p1__17272# p1__17272#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  20.0
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17303 (form-init5585753402963198953.clj:2203).
; Assert failed:
(integer? n)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
(do
 (clojure.core/when-not
  (float? 5)
  (clojure.core/println)
  (clojure.core/println)
  (clojure.core/println '5 " = " (clojure.core/eval 5)))
 (clojure.core/when (clojure.core/nil? (erdos.assert/assert (float? 5))) 5))
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 5)  =  10
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17321 (form-init5585753402963198953.clj:2194).
; Assert failed:
(float? (+ 5 5))
¦       ¦
false   10 
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 1)  =  6
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17340 (form-init5585753402963198953.clj:2187).
; Assert failed:
(float? (+ 5 1))
¦       ¦
false   6 
clj꞉kata-0100-basics-in-15-min.core꞉> 


nil  =  nil
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17359 (form-init5585753402963198953.clj:2188).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 1)  =  6
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17379 (form-init5585753402963198953.clj:2188).
; Assert failed:
(float? (+ 5 1))
¦       ¦
false   6 
clj꞉kata-0100-basics-in-15-min.core꞉> 


; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17396 (form-init5585753402963198953.clj:2189).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 1)  =  6
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17418 (form-init5585753402963198953.clj:2188).
; Assert failed:
(float? (+ 5 1))
¦       ¦
false   6 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17437 (form-init5585753402963198953.clj:2189).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17456 (form-init5585753402963198953.clj:2190).
; Assert failed:
(float? [nil nil])
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17475 (form-init5585753402963198953.clj:2191).
; Assert failed:
(float? [5.0 1])
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/n
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  20
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17496 (form-init5585753402963198953.clj:2202).
; Assert failed:
((fn* [p1__17491#] (< (* p1__17491# p1__17491#) 100)) n)
¦                  ¦  ¦
false              ¦  400 
                   false 
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  20.0
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17522 (form-init5585753402963198953.clj:2204).
; Assert failed:
(integer? n)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 


(+ 5 1)  =  6
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17545 (form-init5585753402963198953.clj:2188).
; Assert failed:
(float? (+ 5 1))
¦       ¦
false   6 
clj꞉kata-0100-basics-in-15-min.core꞉> 


; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17564 (form-init5585753402963198953.clj:2189).
; Assert failed:
(float? nil)
¦
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 


; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval17583 (form-init5585753402963198953.clj:2200).
; Assert failed:
((fn [n] (< (* n 4) 100)) 29)
¦        ¦  ¦
false    ¦  116 
         false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/square
clj꞉kata-0100-basics-in-15-min.core꞉> 
16
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  5
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/square (form-init5585753402963198953.clj:2209).
; Assert failed:
((fn* [p1__17611#] (< p1__17611# 5)) n)
¦                  ¦
false              false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
16
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  5
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/square (form-init5585753402963198953.clj:2209).
; Assert failed:
((fn* [p1__17611#] (< p1__17611# 5)) n)
¦                  ¦
false              false 
clj꞉kata-0100-basics-in-15-min.core꞉> 


n  =  5
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/square (form-init5585753402963198953.clj:2209).
; Assert failed:
((fn* [p1__17611#] (< p1__17611# 5)) n)
¦                  ¦
false              false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/square
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/make-sure
clj꞉kata-0100-basics-in-15-min.core꞉> 
"form = (* 2 3) = 6"
clj꞉kata-0100-basics-in-15-min.core꞉> 
(clojure.core/str "form = " '(* 2 3) " = " (* 2 3))
clj꞉kata-0100-basics-in-15-min.core꞉> 
-1
clj꞉kata-0100-basics-in-15-min.core꞉> 
"zero"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"+"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"+"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"+"
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/+]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(clojure.core/let
 [number__12981__auto__ -1.0E-16]
 (clojure.core/cond
  (clojure.core/< (java.lang.Math/abs number__12981__auto__) 1.0E-15)
  "zero"
  (clojure.core/pos? number__12981__auto__)
  "+"
  :else
  "-"))
clj꞉kata-0100-basics-in-15-min.core꞉> 
(clojure.core/let [number-count__17743__auto__ 22])
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:322:3).
; Unable to resolve symbol: sort-desc in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/sort-desc
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([13 "♣" "♣K"] [12 "♣" "♣D"] [11 "♣" "♣B"] [11 "♠" "♠B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [7 "♣" "♣7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/sort-cards
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [7 "♣" "♣7"] [8 "♦️" "♦️8"] [11 "♣" "♣B"] [11 "♠" "♠B"] [12 "♣" "♣D"] [13 "♣" "♣K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([13 "♣" "♣K"] [12 "♣" "♣D"] [11 "♣" "♣B"] [11 "♠" "♠B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [7 "♣" "♣7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[14 "♣" "♣A"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[14 "♣" "♣A"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[14 "♣" "♣A"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-higher-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-higher-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[12 "♣" "♣D"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[14 "♣" "♣A"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[2 [12 "♣" "♣D"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-better-pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [11 "♣" "♣B"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/hand
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [11 "♣" "♣B"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [11 "♣" "♣B"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/hand2
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] [7 "♠" "♠7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
:♣D
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Execution error (NullPointerException) at kata-0100-basics-in-15-min.cards/eval18073 (form-init5585753402963198953.clj:361).
; null
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([12 "♣" "♣D"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([11 "♣" "♣B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:331:1).
; Unable to resolve symbol: remove-card in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/remove-card
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([11 "♣" "♣B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([11 "♣" "♣B"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([11 "♣" "♣B"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([11 "♣" "♣B"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
()
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/remove-card
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[12 "♣" "♣D"] ([11 "♣" "♣B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-lower-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[12 "♣" "♣D"] ([11 "♣" "♣B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[14 "♣" "♣A"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 "♦️" "♦️8"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[nil ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[nil ([14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-higher-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[nil ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [14 "♣" "♣A"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[12 "♣" "♣D"] ([11 "♣" "♣B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 "♦️" "♦️8"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[nil ()]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-higher-single
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[nil ([14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-better-pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:100:10).
; Unable to resolve symbol: pair in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[-7 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[9 [14 "♣" "♣A"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[3 [14 "♣" "♣A"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[1 [9 "♣" "♣9"] [10 "♣" "♣10"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[9 [14 "♣" "♣A"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[3 [14 "♣" "♣A"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 [14 "♣" "♣A"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 [7 "♣" "♣7"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [9 "♣" "♣9"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[1 [9 "♣" "♣9"] [10 "♣" "♣10"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[9 [14 "♣" "♣A"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[3 [14 "♣" "♣A"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [14 "♣" "♣A"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [7 "♣" "♣7"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [9 "♣" "♣9"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/n-all-pairs
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[2 [7 "♦️" "♦️7"] [9 "♦️" "♦️9"]]
 [1 [7 "♦️" "♦️7"] [8 "♦️" "♦️8"]]
 [1 [8 "♦️" "♦️8"] [9 "♦️" "♦️9"]]
 [0 [8 "♦️" "♦️8"] [8 "♦️" "♦️8"]]
 [0 [7 "♦️" "♦️7"] [7 "♦️" "♦️7"]]
 [0 [9 "♦️" "♦️9"] [9 "♦️" "♦️9"]]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:305:3).
; Unable to resolve symbol: ase in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/ase
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/h
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 "♦️" "♦️8"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 "♠" "♠7"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (cards.clj:227)
in single-strategies, a value may appear only once!
expected: (unique-or-empty coll-of-values)
  actual: (not (unique-or-empty [1 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-try-find-value (cards.clj:224).
; Assert failed: (is (unique-or-empty coll-of-values) "in single-strategies, a value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 

FAIL in () (cards.clj:193)
in pair-strategies, a diff value may appear only once!
expected: (unique-or-empty coll-of-diffs)
  actual: (not (unique-or-empty [1 6 5 7 3 2 1]))
; Execution error (AssertionError) at kata-0100-basics-in-15-min.cards/n-find-pairs-with-diff (cards.clj:188).
; Assert failed: (is (unique-or-empty coll-of-diffs) "in pair-strategies, a diff value may appear only once!")
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[1 [13 "♣" "♣K"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[10 "♥" "♥10"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([7 "♠" "♠7"] [7 "♣" "♣7"] [8 "♦️" "♦️8"] [11 "♣" "♣B"] [11 "♠" "♠B"] [12 "♣" "♣D"] [13 "♣" "♣K"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
([13 "♣" "♣K"] [12 "♣" "♣D"] [11 "♣" "♣B"] [11 "♠" "♠B"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [7 "♣" "♣7"])
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/hand1
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/hand2
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
 [[11 "♣" "♣B"] ([12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
 [nil ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
 [[11 "♣" "♣B"] ([12 "♣" "♣D"] [8 "♦️" "♦️8"] [7 "♠" "♠7"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [14 "♣" "♣A"])]
 [[7 "♠" "♠7"] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [14 "♣" "♣A"])]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/find-better-pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[4 [7 "♠" "♠7"] [11 "♣" "♣B"]] ([12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[0 [7 "♠" "♠7"] [7 "♣" "♣7"]] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [7 "♣" "♣7"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[0 [9 "♣" "♣9"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[1 [9 "♣" "♣9"] [10 "♣" "♣10"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[9 [14 "♣" "♣A"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[3 [14 "♣" "♣A"] [9 "♣" "♣9"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [14 "♣" "♣A"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 [14 "♣" "♣A"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[8 [7 "♣" "♣7"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [9 "♣" "♣9"] [7 "♣" "♣7"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[7 [7 "♣" "♣7"] [14 "♣" "♣A"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[4 [7 "♠" "♠7"] [11 "♣" "♣B"]] ([12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 [7 "♠" "♠7"] [7 "♣" "♣7"]] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[4 [7 "♠" "♠7"] [11 "♣" "♣B"]] ([12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"] [13 "♣" "♣K"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
nil
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 [7 "♠" "♠7"] [7 "♣" "♣7"]] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[9 [14 "♣" "♣A"] [7 "♠" "♠7"]] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [7 "♣" "♣7"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/pair?
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[6 [7 "♦️" "♦️7"] [13 "♣" "♣K"]]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[10 "♥" "♥10"]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/cards.clj:431:3).
; Unable to resolve symbol: better-pair? in this context
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/better-pair?
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/better-pair?
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/better-pair?
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
[[8 [7 "♠" "♠7"] [7 "♣" "♣7"]] ([11 "♣" "♣B"] [12 "♣" "♣D"] [8 "♦️" "♦️8"] [11 "♠" "♠B"] [14 "♣" "♣A"])]
clj꞉kata-0100-basics-in-15-min.cards꞉> 
#'kata-0100-basics-in-15-min.cards/better-pair?
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
false
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
true
clj꞉kata-0100-basics-in-15-min.cards꞉> 
; Jacking in...
; nREPL Connection was closed
; Starting Jack-in Terminal: lein update-in :dependencies conj '[nrepl,"0.9.0"]' -- update-in :plugins conj '[cider/cider-nrepl,"0.27.4"]' -- update-in '[:repl-options,:nrepl-middleware]' conj '["cider.nrepl/cider-middleware"]' -- repl :headless
; Hooking up nREPL sessions...
; Connected session: clj
; TIPS:
;   - You can edit the contents here. Use it as a REPL if you like.
;   - `alt+enter` evaluates the current top level form.
;   - `ctrl+enter` evaluates the current form.
;   - `alt+up` and `alt+down` traverse up and down the REPL command history
;      when the cursor is after the last contents at the prompt
;   - Clojure lines in stack traces are peekable and clickable.
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Jack-in done.
clj꞉kata-0100-basics-in-15-min.core꞉> 
3
clj꞉kata-0100-basics-in-15-min.calva꞉> 
2
clj꞉kata-0100-basics-in-15-min.calva꞉> 
3
clj꞉kata-0100-basics-in-15-min.calva꞉> 
2
clj꞉kata-0100-basics-in-15-min.calva꞉> 
6
clj꞉kata-0100-basics-in-15-min.calva꞉> 
; Evaluating file: calva.clj
this will be printetd loading the file
nil
clj꞉kata-0100-basics-in-15-min.calva꞉> 
11
clj꞉kata-0100-basics-in-15-min.calva꞉> 
16
clj꞉kata-0100-basics-in-15-min.calva꞉> 
16
clj꞉kata-0100-basics-in-15-min.calva꞉> 
(0 1 2 3 4 5 6 7 8 9)
clj꞉kata-0100-basics-in-15-min.calva꞉> 
10
clj꞉kata-0100-basics-in-15-min.calva꞉> 
(0 1 2 3 4 5 6 7 8 9 ...)
nil
clj꞉kata-0100-basics-in-15-min.calva꞉> 
(0
 1
 2
 3
 4
 5
 6
 7
 8
 9
 10
 11
 12
 13
 14
 15
 16
 17
 18
 19
 20
 21
 22
 23
 24
 25
 26
 27
 28
 29
 30
 31
 32
 33
 34
 35
 36
 37
 38
 39
 40
 41
 42
 43
 44
 45
 46
 47
 48
 49
 ...)
clj꞉kata-0100-basics-in-15-min.calva꞉> 
clj꞉kata-0100-basics-in-15-min.calva꞉> 
16
clj꞉kata-0100-basics-in-15-min.core꞉> 
Hello Armin!
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/reduce]
clj꞉kata-0100-basics-in-15-min.core꞉> 
11
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (ClassCastException) at kata-0100-basics-in-15-min.core/eval8416 (form-init10468054865596329878.clj:6).
; class java.lang.Long cannot be cast to class clojure.lang.IFn (java.lang.Long is in module java.base of loader 'bootstrap'; clojure.lang.IFn is in unnamed module of loader 'app')
clj꞉kata-0100-basics-in-15-min.core꞉> 
[7 5 6]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 5 6)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 5 6)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:65:1).
; No such namespace: ea
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (AssertionError) at kata-0100-basics-in-15-min.core/eval8444 (form-init10468054865596329878.clj:65).
; Assert failed:
(= (+ 3 4) (- 10 4))
¦  ¦       ¦
¦  7       6 
false 
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{}
clj꞉kata-0100-basics-in-15-min.core꞉> 
1
clj꞉kata-0100-basics-in-15-min.core꞉> 
1
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"b" :a}
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
"2x3 = 6"
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 3 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(#function[clojure.core/+] 2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(+ 2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 0 6)
clj꞉kata-0100-basics-in-15-min.core꞉> 
2
clj꞉kata-0100-basics-in-15-min.core꞉> 
(6 0)
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 2 3]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 2 3]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[3 4 5]
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[kata-0100-basics-in-15-min.core/eval8492/fn--8493]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 3 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
[2 3 4]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 3 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(nil nil nil)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(:1 :2 :3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 4 6)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 4 6)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(1 3 5)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(1 9 25)
clj꞉kata-0100-basics-in-15-min.core꞉> 
35
clj꞉kata-0100-basics-in-15-min.core꞉> 
0
clj꞉kata-0100-basics-in-15-min.core꞉> 
1
clj꞉kata-0100-basics-in-15-min.core꞉> 
135
clj꞉kata-0100-basics-in-15-min.core꞉> 
(reduce + 100 (map (fn* [p1__8541#] (* p1__8541# p1__8541#)) (filter odd? [1 2 3 4 5 6])))
clj꞉kata-0100-basics-in-15-min.core꞉> 
6000
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8035).
; Unable to resolve symbol: x in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/x
clj꞉kata-0100-basics-in-15-min.core꞉> 
6
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/half-of-v1
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/half-of-v2
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
9/2
clj꞉kata-0100-basics-in-15-min.core꞉> 
4.5
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/dimension
clj꞉kata-0100-basics-in-15-min.core꞉> 
"No dimension. Walhalla. Heaven. Nirvana."
clj꞉kata-0100-basics-in-15-min.core꞉> 
"We live on a line at adress: 15"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"On a ideal round planet, long = 11, lat = 12"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"somewhere in space. 11 12 44"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"somewhere in space. 1 2 3, and beyond imaginagion: (4 5 6 7)"
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/recurse-somehow-3
clj꞉kata-0100-basics-in-15-min.core꞉> 
[10 7 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Execution error (StackOverflowError) at kata-0100-basics-in-15-min.core/recurse-somehow-3 (form-init10468054865596329878.clj:250).
; null
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:267:1).
; Unable to resolve symbol: recurse-somehow-3-proper in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/recurse-somehow-3-proper
clj꞉kata-0100-basics-in-15-min.core꞉> 
[10 7 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
[16000
 15997
 15994
 15991
 15988
 15985
 15982
 15979
 15976
 15973
 15970
 15967
 15964
 15961
 15958
 15955
 15952
 15949
 15946
 15943
 15940
 15937
 15934
 15931
 15928
 15925
 15922
 15919
 15916
 15913
 15910
 15907
 15904
 15901
 15898
 15895
 15892
 15889
 15886
 15883
 15880
 15877
 15874
 15871
 15868
 15865
 15862
 15859
 15856
 15853
 ...]
clj꞉kata-0100-basics-in-15-min.core꞉> 
20000
clj꞉kata-0100-basics-in-15-min.core꞉> 
20000
clj꞉kata-0100-basics-in-15-min.core꞉> 
12110
clj꞉kata-0100-basics-in-15-min.core꞉> 
11906
clj꞉kata-0100-basics-in-15-min.core꞉> 
13693
clj꞉kata-0100-basics-in-15-min.core꞉> 
11869
clj꞉kata-0100-basics-in-15-min.core꞉> 
12321
clj꞉kata-0100-basics-in-15-min.core꞉> 
11618
clj꞉kata-0100-basics-in-15-min.core꞉> 
11663
clj꞉kata-0100-basics-in-15-min.core꞉> 
11729
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/xyz
clj꞉kata-0100-basics-in-15-min.core꞉> 
0
clj꞉kata-0100-basics-in-15-min.core꞉> 
0
clj꞉kata-0100-basics-in-15-min.core꞉> 
20000
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'clojure.core/+
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'clojure.core/+
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling var at (src/kata_0100_basics_in_15_min/core.clj:295:1).
; Unable to resolve var: *xyz* in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling var at (src/kata_0100_basics_in_15_min/core.clj:295:1).
; Unable to resolve var: *xyz* in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
20000
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling var at (src/kata_0100_basics_in_15_min/core.clj:295:1).
; Unable to resolve var: *xyz* in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
clojure.lang.Compiler/analyzeSeq (Compiler.java:7119)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$InvokeExpr/parse (Compiler.java:3892)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7113)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler$BodyExpr$Parser/parse (Compiler.java:6124)
clojure.lang.Compiler$FnMethod/parse (Compiler.java:5471)
clojure.lang.Compiler$FnExpr/parse (Compiler.java:4033)
clojure.lang.Compiler/analyzeSeq (Compiler.java:7109)
clojure.lang.Compiler/analyze (Compiler.java:6793)
clojure.lang.Compiler/eval (Compiler.java:7178)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/*xyz*
clj꞉kata-0100-basics-in-15-min.core꞉> 
7
clj꞉kata-0100-basics-in-15-min.core꞉> 
3
clj꞉kata-0100-basics-in-15-min.core꞉> 
(1 1 2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 2 3 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
(1 1 2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
1
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 3)
clj꞉kata-0100-basics-in-15-min.core꞉> 
3
clj꞉kata-0100-basics-in-15-min.core꞉> 
3
clj꞉kata-0100-basics-in-15-min.core꞉> 
(5 6 7 8)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 4 6 8)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 4 5 6 7 8)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(false 1)
clj꞉kata-0100-basics-in-15-min.core꞉> 
(([:a 3] [:b 13]) (1 2 3))
clj꞉kata-0100-basics-in-15-min.core꞉> 
[1 2 3 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
1
clj꞉kata-0100-basics-in-15-min.core꞉> 
(2 3 4)
clj꞉kata-0100-basics-in-15-min.core꞉> 
2
clj꞉kata-0100-basics-in-15-min.core꞉> 
2
clj꞉kata-0100-basics-in-15-min.core꞉> 
(1 2 3 4 5 6 7 8 9 10 11)
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"a" "b"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/mixed
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"a" 3 2 "b"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/mixed
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"a" 3 2 "b"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{1 "a" 3 2 "b"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/one
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/two
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/two
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/one
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"frodo"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"frida"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{"catwoman" "hulk" "frida" "frodo"}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{1 3 2}
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{1 3 2}
clj꞉kata-0100-basics-in-15-min.core꞉> 
<-(4 6 8 9 12 15)-<
clj꞉kata-0100-basics-in-15-min.core꞉> 
[]
clj꞉kata-0100-basics-in-15-min.core꞉> 
()
clj꞉kata-0100-basics-in-15-min.core꞉> 
#{}
clj꞉kata-0100-basics-in-15-min.core꞉> 
{}
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:708:1).
; Unable to resolve symbol: q in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#'kata-0100-basics-in-15-min.core/q
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
; Syntax error (AssertionError) compiling at (src/kata_0100_basics_in_15_min/core.clj:61:1).
; Assert failed:
(= (+ 3 4) (- 10 4))
¦  ¦       ¦
¦  7       6 
false 

; Evaluation of file core.clj failed: class clojure.lang.Compiler$CompilerException
clojure.lang.Compiler/load (Compiler.java:7652)
kata-0100-basics-in-15-min.core/eval8836 (form-init10468054865596329878.clj:1)
clojure.lang.Compiler/eval (Compiler.java:7181)
clojure.core/eval (core.clj:3202)
clojure.core/eval (core.clj:3198)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.core/apply (core.clj:667)
clojure.core/with-bindings* (core.clj:1977)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:87)
clojure.main/repl (main.clj:437)
clojure.main/repl (main.clj:458)
clojure.main/repl (main.clj:368)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:84)
nrepl.middleware.interruptible-eval/evaluate (interruptible_eval.clj:56)
nrepl.middleware.interruptible-eval/interruptible-eval (interruptible_eval.clj:152)
nrepl.middleware.session/session-exec (session.clj:218)
nrepl.middleware.session/session-exec (session.clj:217)
java.lang.Thread/run (Thread.java:829)
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 741.370959 msecs"
"Elapsed time: 0.349542 msecs"
"Elapsed time: 0.301042 msecs"
"Elapsed time: 3.595208 msecs"
"Elapsed time: 534.616708 msecs"
"Elapsed time: 1084.059 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
abc
814249192950458
03.07.2022
814249230543416
03.07.2022
111111111
30.05.2012
true
true
"Elapsed time: 0.008041 msecs"
"Elapsed time: 0.123709 msecs"
"Elapsed time: 5.41E-4 msecs"
[3 5 7]
(5 7)
(7)
()
20
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
finally...
:a :b :c :d
:a :d :x :y :z
A B X Y
A D nil
A :-/ B
all values:  (0 1 2 3 4 5 6 7 8 9)
a =  3
b =  4
c =  5
all values:  (0 1 2)
a =  nil
b =  nil
c =  nil
all values:  (0 1 2 3 4)
a =  3
b =  4
c =  nil
all values:  (15 16 17 18 19 20 21 22 23 24 ...)
a =  18
b =  19
c =  20
false
42
:cheeseburger
finished both  [21537 -2792]
final value should be: 25000, is:  21537
finished both  [25000 -50]
final value should be: 25000, is:  25000
470
500
"Elapsed time: 106.968667 msecs"
"Elapsed time: 48.057583 msecs"
"Elapsed time: 143.173125 msecs"
"Elapsed time: 895.782292 msecs"
"Elapsed time: 575.226583 msecs"
"Elapsed time: 545.70125 msecs"
"Elapsed time: 665.121959 msecs"
-------------------------
clojure.core/derive
([tag parent] [h tag parent])
  Establishes a parent/child relationship between parent and
  tag. Parent must be a namespace-qualified symbol or keyword and
  child can be either a namespace-qualified symbol or keyword or a
  class. h must be a hierarchy obtained from make-hierarchy, if not
  supplied defaults to, and modifies, the global hierarchy.
; Warning: protocol #'kata-0100-basics-in-15-min.core/Append is overwriting function append
-------------------------
kata-0100-basics-in-15-min.core/Append
  This protocol lets us add things to the end of a collection.
-------------------------
kata-0100-basics-in-15-min.core/append
([coll x])
  Appends x to the end of collection coll.
Adding 2 and 2 together...
Adding 2 and 2 together...
nil
Adding 2 and 2 together...
4
Adding 2 and 2 together...
4-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
-------- dbg -------->>
(/ 1 (+ 2 1))  =>  1/3
<<------ dbg --------

-------- dbg -------->>
(take 10 (map (partial + 20) (range 100)))  =>  (20 21 22 23 24 25 26 27 28 29)
<<------ dbg --------

frist
second
15
[36 25 16 9 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
"sumfin"
clj꞉kata-0100-basics-in-15-min.core꞉> 
nil
clj꞉kata-0100-basics-in-15-min.core꞉> 
"default"
clj꞉kata-0100-basics-in-15-min.core꞉> 
"n is between 10 and 25 (inclusive each)"
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error macroexpanding cond at (src/kata_0100_basics_in_15_min/core.clj:1334:3).
; cond requires an even number of forms
clj꞉kata-0100-basics-in-15-min.core꞉> 
"n is between 10 and 25 (inclusive each)"
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1335:5).
; Unable to resolve symbol: n in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
5
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8035).
; Unable to resolve symbol: n in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/<]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8035).
; Can't take value of a macro: #'clojure.core/cond
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1336:5).
; Unable to resolve symbol: n in this context
clj꞉kata-0100-basics-in-15-min.core꞉> 
:else
clj꞉kata-0100-basics-in-15-min.core꞉> 
#function[clojure.core/fn?]
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Syntax error compiling at (src/kata_0100_basics_in_15_min/core.clj:1:8035).
; Can't take value of a macro: #'clojure.core/condp
clj꞉kata-0100-basics-in-15-min.core꞉> 
"n is smaller than 5"
clj꞉kata-0100-basics-in-15-min.core꞉> 
; Evaluating file: core.clj
Hello Armin!
yes, one is smaller than 100
Hello, world! 42 is meaningful?
abc"abc" 123
blank?
capitalize
ends-with?
escape
includes?
index-of
join
last-index-of
lower-case
re-quote-replacement
replace
replace-first
reverse
split
split-lines
starts-with?
trim
trim-newline
triml
trimr
upper-case
-------------------------
clojure.string/split-lines
([s])
  Splits s on \n or \r\n.
this is a 17,12exa-map = {:width 15, :heigth 25}
new-map = {:width 15, :heigth 25, :thickness 10}
result:  (mysqr: 3
mysqr: 4
9 mysqr: 5
16 25)
"Elapsed time: 360.794709 msecs"
"Elapsed time: 0.650125 msecs"
"Elapsed time: 0.198542 msecs"
"Elapsed time: 8.272625 msecs"
"Elapsed time: 655.714875 msecs"
"Elapsed time: 3596.807667 msecs"
acc: 100, val: 1
acc: 101, val: 2
acc: 103, val: 3
4
5
6
8
10
12
12
15
18
1 0
1 1
1 2
1 3
1 4
1 5
1 6
1 7
1 8
1 9
1 10
1 11
1 12
1 13
1 14
1 15
1 16
1 17
1 18
1 19
1 20
1 21
1 22
1 23
1 24
1 25
1 26
1 27
1 28
1 29
1 30
1 31
1 32
1 33
1 34
1 35
1 36
1 37
1 38
1 39
1 40
1 41
1 42
1 43
1 44
1 45
1 46
1 47
1 48
1 49
1 50
1 51
1 52
1 53
1 54
1 55
1 56
1 57
1 58
1 59
1 60
1 61
1 62
1 63
1 64
1 65
1 66
1 67
1 68
1 69
1 70
1 71
1 72
1 73
1 74
1 75
1 76
1 77
1 78
1 79
1 80
1 81
1 82
1 83
1 84
1 85
1 86
1 87
1 88
1 89
1 90
1 91
1 92
1 93
1 94
1 95
1 96
1 97
1 98
1 99
2 0
2 1
2 2
2 3
2 4
2 5
2 6
2 7
2 8
2 9
2 10
2 11
2 12
2 13
2 14
2 15
2 16
2 17
2 18
2 19
2 20
2 21
2 22
2 23
2 24
2 25
2 26
2 27
2 28
2 29
2 30
2 31
2 32
2 33
2 34
2 35
2 36
2 37
2 38
2 39
2 40
2 41
2 42
2 43
2 44
2 45
2 46
2 47
2 48
2 49
2 50
2 51
2 52
2 53
2 54
2 55
2 56
2 57
2 58
2 59
2 60
2 61
2 62
2 63
2 64
2 65
2 66
2 67
2 68
2 69
2 70
2 71
2 72
2 73
2 74
2 75
2 76
2 77
2 78
2 79
2 80
2 81
2 82
2 83
2 84
2 85
2 86
2 87
2 88
2 89
2 90
2 91
2 92
2 93
2 94
2 95
2 96
2 97
2 98
2 99
3 0
3 1
3 2
3 3
3 4
3 5
3 6
3 7
3 8
3 9
3 10
3 11
3 12
3 13
3 14
3 15
3 16
3 17
3 18
3 19
3 20
3 21
3 22
3 23
3 24
3 25
3 26
3 27
3 28
3 29
3 30
3 31
3 32
3 33
3 34
3 35
3 36
3 37
3 38
3 39
3 40
3 41
3 42
3 43
3 44
3 45
3 46
3 47
3 48
3 49
3 50
3 51
3 52
3 53
3 54
3 55
3 56
3 57
3 58
3 59
3 60
3 61
3 62
3 63
3 64
3 65
3 66
3 67
3 68
3 69
3 70
3 71
3 72
3 73
3 74
3 75
3 76
3 77
3 78
3 79
3 80
3 81
3 82
3 83
3 84
3 85
3 86
3 87
3 88
3 89
3 90
3 91
3 92
3 93
3 94
3 95
3 96
3 97
3 98
3 99
3
4
5
6
3
4
5
3
4
5
abc
815218434114708
03.07.2022
815218437016708
03.07.2022
111111111
30.05.2012
true
true
"Elapsed time: 0.008792 msecs"
"Elapsed time: 0.133459 msecs"
"Elapsed time: 5.42E-4 msecs"
[3 5 7]
(5 7)
(7)
()
20
20
19
18
17
16
15
14
13
12
11
10
9
8
7
6
5
4
3
2
1
0
finally...
:a :b :c :d
:a :d :x :y :z
A B X Y
A D nil
A :-/ B
all values:  (0 1 2 3 4 5 6 7 8 9)
a =  3
b =  4
c =  5
all values:  (0 1 2)
a =  nil
b =  nil
c =  nil
all values:  (0 1 2 3 4)
a =  3
b =  4
c =  nil
all values:  (15 16 17 18 19 20 21 22 23 24 ...)
a =  18
b =  19
c =  20
false
42
:cheeseburger
finished both  [23491 -2022]
final value should be: 25000, is:  23491
finished both  [25000 1663]
final value should be: 25000, is:  25000
413
500
"Elapsed time: 100.98425 msecs"
"Elapsed time: 70.196333 msecs"
"Elapsed time: 260.893791 msecs"
"Elapsed time: 809.021125 msecs"
"Elapsed time: 593.334 msecs"
"Elapsed time: 439.521875 msecs"
"Elapsed time: 451.820541 msecs"
-------------------------
clojure.core/derive
([tag parent] [h tag parent])
  Establishes a parent/child relationship between parent and
  tag. Parent must be a namespace-qualified symbol or keyword and
  child can be either a namespace-qualified symbol or keyword or a
  class. h must be a hierarchy obtained from make-hierarchy, if not
  supplied defaults to, and modifies, the global hierarchy.
; Warning: protocol #'kata-0100-basics-in-15-min.core/Append is overwriting function append
-------------------------
kata-0100-basics-in-15-min.core/Append
  This protocol lets us add things to the end of a collection.
-------------------------
kata-0100-basics-in-15-min.core/append
([coll x])
  Appends x to the end of collection coll.
Adding 2 and 2 together...
Adding 2 and 2 together...
nil
Adding 2 and 2 together...
4
Adding 2 and 2 together...
4-------------------------
clojure.core/and
([] [x] [x & next])
Macro
  Evaluates exprs one at a time, from left to right. If a form
  returns logical false (nil or false), and returns that value and
  doesn't evaluate any of the other expressions, otherwise it returns
  the value of the last expr. (and) returns true.
-------- dbg -------->>
(/ 1 (+ 2 1))  =>  1/3
<<------ dbg --------

-------- dbg -------->>
(take 10 (map (partial + 20) (range 100)))  =>  (20 21 22 23 24 25 26 27 28 29)
<<------ dbg --------

frist
second
15
[36 25 16 9 4 1]
clj꞉kata-0100-basics-in-15-min.core꞉> 
